// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lottery/ssc/cqssc/proto/cqssc.proto

package cqssc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Config struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Odds                 float64  `protobuf:"fixed64,4,opt,name=odds,proto3" json:"odds,omitempty"`
	Comm                 float64  `protobuf:"fixed64,5,opt,name=comm,proto3" json:"comm,omitempty"`
	Price                float64  `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	Active               bool     `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Config) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Config) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Config) GetOdds() float64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *Config) GetComm() float64 {
	if m != nil {
		return m.Comm
	}
	return 0
}

func (m *Config) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Config) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type GetConfigReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigReq) Reset()         { *m = GetConfigReq{} }
func (m *GetConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigReq) ProtoMessage()    {}
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{1}
}

func (m *GetConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigReq.Unmarshal(m, b)
}
func (m *GetConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigReq.Marshal(b, m, deterministic)
}
func (m *GetConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigReq.Merge(m, src)
}
func (m *GetConfigReq) XXX_Size() int {
	return xxx_messageInfo_GetConfigReq.Size(m)
}
func (m *GetConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigReq proto.InternalMessageInfo

type UpdateConfigReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Odds                 float64  `protobuf:"fixed64,2,opt,name=odds,proto3" json:"odds,omitempty"`
	Comm                 float64  `protobuf:"fixed64,3,opt,name=comm,proto3" json:"comm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateConfigReq) Reset()         { *m = UpdateConfigReq{} }
func (m *UpdateConfigReq) String() string { return proto.CompactTextString(m) }
func (*UpdateConfigReq) ProtoMessage()    {}
func (*UpdateConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{2}
}

func (m *UpdateConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfigReq.Unmarshal(m, b)
}
func (m *UpdateConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfigReq.Marshal(b, m, deterministic)
}
func (m *UpdateConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfigReq.Merge(m, src)
}
func (m *UpdateConfigReq) XXX_Size() int {
	return xxx_messageInfo_UpdateConfigReq.Size(m)
}
func (m *UpdateConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfigReq proto.InternalMessageInfo

func (m *UpdateConfigReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateConfigReq) GetOdds() float64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *UpdateConfigReq) GetComm() float64 {
	if m != nil {
		return m.Comm
	}
	return 0
}

type Unit struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unit) Reset()         { *m = Unit{} }
func (m *Unit) String() string { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()    {}
func (*Unit) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{3}
}

func (m *Unit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unit.Unmarshal(m, b)
}
func (m *Unit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unit.Marshal(b, m, deterministic)
}
func (m *Unit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unit.Merge(m, src)
}
func (m *Unit) XXX_Size() int {
	return xxx_messageInfo_Unit.Size(m)
}
func (m *Unit) XXX_DiscardUnknown() {
	xxx_messageInfo_Unit.DiscardUnknown(m)
}

var xxx_messageInfo_Unit proto.InternalMessageInfo

func (m *Unit) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Unit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Unit) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GetUnitReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUnitReq) Reset()         { *m = GetUnitReq{} }
func (m *GetUnitReq) String() string { return proto.CompactTextString(m) }
func (*GetUnitReq) ProtoMessage()    {}
func (*GetUnitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{4}
}

func (m *GetUnitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUnitReq.Unmarshal(m, b)
}
func (m *GetUnitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUnitReq.Marshal(b, m, deterministic)
}
func (m *GetUnitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUnitReq.Merge(m, src)
}
func (m *GetUnitReq) XXX_Size() int {
	return xxx_messageInfo_GetUnitReq.Size(m)
}
func (m *GetUnitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUnitReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUnitReq proto.InternalMessageInfo

func (m *GetUnitReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindUnitReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUnitReq) Reset()         { *m = FindUnitReq{} }
func (m *FindUnitReq) String() string { return proto.CompactTextString(m) }
func (*FindUnitReq) ProtoMessage()    {}
func (*FindUnitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{5}
}

func (m *FindUnitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUnitReq.Unmarshal(m, b)
}
func (m *FindUnitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUnitReq.Marshal(b, m, deterministic)
}
func (m *FindUnitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUnitReq.Merge(m, src)
}
func (m *FindUnitReq) XXX_Size() int {
	return xxx_messageInfo_FindUnitReq.Size(m)
}
func (m *FindUnitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUnitReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindUnitReq proto.InternalMessageInfo

func (m *FindUnitReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindUnitReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindUnitReq) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type FindUnitResp struct {
	Units                []*Unit  `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUnitResp) Reset()         { *m = FindUnitResp{} }
func (m *FindUnitResp) String() string { return proto.CompactTextString(m) }
func (*FindUnitResp) ProtoMessage()    {}
func (*FindUnitResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{6}
}

func (m *FindUnitResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUnitResp.Unmarshal(m, b)
}
func (m *FindUnitResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUnitResp.Marshal(b, m, deterministic)
}
func (m *FindUnitResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUnitResp.Merge(m, src)
}
func (m *FindUnitResp) XXX_Size() int {
	return xxx_messageInfo_FindUnitResp.Size(m)
}
func (m *FindUnitResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUnitResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindUnitResp proto.InternalMessageInfo

func (m *FindUnitResp) GetUnits() []*Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

type Catg struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Pref                 bool     `protobuf:"varint,4,opt,name=pref,proto3" json:"pref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Catg) Reset()         { *m = Catg{} }
func (m *Catg) String() string { return proto.CompactTextString(m) }
func (*Catg) ProtoMessage()    {}
func (*Catg) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{7}
}

func (m *Catg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Catg.Unmarshal(m, b)
}
func (m *Catg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Catg.Marshal(b, m, deterministic)
}
func (m *Catg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Catg.Merge(m, src)
}
func (m *Catg) XXX_Size() int {
	return xxx_messageInfo_Catg.Size(m)
}
func (m *Catg) XXX_DiscardUnknown() {
	xxx_messageInfo_Catg.DiscardUnknown(m)
}

var xxx_messageInfo_Catg proto.InternalMessageInfo

func (m *Catg) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Catg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Catg) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Catg) GetPref() bool {
	if m != nil {
		return m.Pref
	}
	return false
}

type GetCatgReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCatgReq) Reset()         { *m = GetCatgReq{} }
func (m *GetCatgReq) String() string { return proto.CompactTextString(m) }
func (*GetCatgReq) ProtoMessage()    {}
func (*GetCatgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{8}
}

func (m *GetCatgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCatgReq.Unmarshal(m, b)
}
func (m *GetCatgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCatgReq.Marshal(b, m, deterministic)
}
func (m *GetCatgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCatgReq.Merge(m, src)
}
func (m *GetCatgReq) XXX_Size() int {
	return xxx_messageInfo_GetCatgReq.Size(m)
}
func (m *GetCatgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCatgReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCatgReq proto.InternalMessageInfo

func (m *GetCatgReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindCatgReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Pref                 string   `protobuf:"bytes,4,opt,name=pref,proto3" json:"pref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindCatgReq) Reset()         { *m = FindCatgReq{} }
func (m *FindCatgReq) String() string { return proto.CompactTextString(m) }
func (*FindCatgReq) ProtoMessage()    {}
func (*FindCatgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{9}
}

func (m *FindCatgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindCatgReq.Unmarshal(m, b)
}
func (m *FindCatgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindCatgReq.Marshal(b, m, deterministic)
}
func (m *FindCatgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindCatgReq.Merge(m, src)
}
func (m *FindCatgReq) XXX_Size() int {
	return xxx_messageInfo_FindCatgReq.Size(m)
}
func (m *FindCatgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindCatgReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindCatgReq proto.InternalMessageInfo

func (m *FindCatgReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindCatgReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindCatgReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *FindCatgReq) GetPref() string {
	if m != nil {
		return m.Pref
	}
	return ""
}

type FindCatgResp struct {
	Catgs                []*Catg  `protobuf:"bytes,1,rep,name=catgs,proto3" json:"catgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindCatgResp) Reset()         { *m = FindCatgResp{} }
func (m *FindCatgResp) String() string { return proto.CompactTextString(m) }
func (*FindCatgResp) ProtoMessage()    {}
func (*FindCatgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{10}
}

func (m *FindCatgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindCatgResp.Unmarshal(m, b)
}
func (m *FindCatgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindCatgResp.Marshal(b, m, deterministic)
}
func (m *FindCatgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindCatgResp.Merge(m, src)
}
func (m *FindCatgResp) XXX_Size() int {
	return xxx_messageInfo_FindCatgResp.Size(m)
}
func (m *FindCatgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindCatgResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindCatgResp proto.InternalMessageInfo

func (m *FindCatgResp) GetCatgs() []*Catg {
	if m != nil {
		return m.Catgs
	}
	return nil
}

type Group struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{11}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type GetGroupReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupReq) Reset()         { *m = GetGroupReq{} }
func (m *GetGroupReq) String() string { return proto.CompactTextString(m) }
func (*GetGroupReq) ProtoMessage()    {}
func (*GetGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{12}
}

func (m *GetGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupReq.Unmarshal(m, b)
}
func (m *GetGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupReq.Marshal(b, m, deterministic)
}
func (m *GetGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupReq.Merge(m, src)
}
func (m *GetGroupReq) XXX_Size() int {
	return xxx_messageInfo_GetGroupReq.Size(m)
}
func (m *GetGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupReq proto.InternalMessageInfo

func (m *GetGroupReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindGroupReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindGroupReq) Reset()         { *m = FindGroupReq{} }
func (m *FindGroupReq) String() string { return proto.CompactTextString(m) }
func (*FindGroupReq) ProtoMessage()    {}
func (*FindGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{13}
}

func (m *FindGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindGroupReq.Unmarshal(m, b)
}
func (m *FindGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindGroupReq.Marshal(b, m, deterministic)
}
func (m *FindGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindGroupReq.Merge(m, src)
}
func (m *FindGroupReq) XXX_Size() int {
	return xxx_messageInfo_FindGroupReq.Size(m)
}
func (m *FindGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindGroupReq proto.InternalMessageInfo

func (m *FindGroupReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindGroupReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindGroupReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type FindGroupResp struct {
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindGroupResp) Reset()         { *m = FindGroupResp{} }
func (m *FindGroupResp) String() string { return proto.CompactTextString(m) }
func (*FindGroupResp) ProtoMessage()    {}
func (*FindGroupResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{14}
}

func (m *FindGroupResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindGroupResp.Unmarshal(m, b)
}
func (m *FindGroupResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindGroupResp.Marshal(b, m, deterministic)
}
func (m *FindGroupResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindGroupResp.Merge(m, src)
}
func (m *FindGroupResp) XXX_Size() int {
	return xxx_messageInfo_FindGroupResp.Size(m)
}
func (m *FindGroupResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindGroupResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindGroupResp proto.InternalMessageInfo

func (m *FindGroupResp) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Play struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Pref                 bool     `protobuf:"varint,4,opt,name=pref,proto3" json:"pref,omitempty"`
	Active               bool     `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	Pr                   int32    `protobuf:"varint,6,opt,name=pr,proto3" json:"pr,omitempty"`
	CatgId               int32    `protobuf:"varint,7,opt,name=catg_id,json=catgId,proto3" json:"catg_id,omitempty"`
	GroupId              int32    `protobuf:"varint,8,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Units                []int64  `protobuf:"varint,9,rep,packed,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Play) Reset()         { *m = Play{} }
func (m *Play) String() string { return proto.CompactTextString(m) }
func (*Play) ProtoMessage()    {}
func (*Play) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{15}
}

func (m *Play) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Play.Unmarshal(m, b)
}
func (m *Play) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Play.Marshal(b, m, deterministic)
}
func (m *Play) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Play.Merge(m, src)
}
func (m *Play) XXX_Size() int {
	return xxx_messageInfo_Play.Size(m)
}
func (m *Play) XXX_DiscardUnknown() {
	xxx_messageInfo_Play.DiscardUnknown(m)
}

var xxx_messageInfo_Play proto.InternalMessageInfo

func (m *Play) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Play) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Play) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Play) GetPref() bool {
	if m != nil {
		return m.Pref
	}
	return false
}

func (m *Play) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Play) GetPr() int32 {
	if m != nil {
		return m.Pr
	}
	return 0
}

func (m *Play) GetCatgId() int32 {
	if m != nil {
		return m.CatgId
	}
	return 0
}

func (m *Play) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Play) GetUnits() []int64 {
	if m != nil {
		return m.Units
	}
	return nil
}

type GetPlayReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlayReq) Reset()         { *m = GetPlayReq{} }
func (m *GetPlayReq) String() string { return proto.CompactTextString(m) }
func (*GetPlayReq) ProtoMessage()    {}
func (*GetPlayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{16}
}

func (m *GetPlayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayReq.Unmarshal(m, b)
}
func (m *GetPlayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayReq.Marshal(b, m, deterministic)
}
func (m *GetPlayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayReq.Merge(m, src)
}
func (m *GetPlayReq) XXX_Size() int {
	return xxx_messageInfo_GetPlayReq.Size(m)
}
func (m *GetPlayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayReq proto.InternalMessageInfo

func (m *GetPlayReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdatePlayReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pref                 string   `protobuf:"bytes,2,opt,name=pref,proto3" json:"pref,omitempty"`
	Active               string   `protobuf:"bytes,3,opt,name=active,proto3" json:"active,omitempty"`
	Units                []int64  `protobuf:"varint,4,rep,packed,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePlayReq) Reset()         { *m = UpdatePlayReq{} }
func (m *UpdatePlayReq) String() string { return proto.CompactTextString(m) }
func (*UpdatePlayReq) ProtoMessage()    {}
func (*UpdatePlayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{17}
}

func (m *UpdatePlayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePlayReq.Unmarshal(m, b)
}
func (m *UpdatePlayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePlayReq.Marshal(b, m, deterministic)
}
func (m *UpdatePlayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePlayReq.Merge(m, src)
}
func (m *UpdatePlayReq) XXX_Size() int {
	return xxx_messageInfo_UpdatePlayReq.Size(m)
}
func (m *UpdatePlayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePlayReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePlayReq proto.InternalMessageInfo

func (m *UpdatePlayReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePlayReq) GetPref() string {
	if m != nil {
		return m.Pref
	}
	return ""
}

func (m *UpdatePlayReq) GetActive() string {
	if m != nil {
		return m.Active
	}
	return ""
}

func (m *UpdatePlayReq) GetUnits() []int64 {
	if m != nil {
		return m.Units
	}
	return nil
}

type FindPlayReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Pref                 string   `protobuf:"bytes,4,opt,name=pref,proto3" json:"pref,omitempty"`
	Active               string   `protobuf:"bytes,5,opt,name=active,proto3" json:"active,omitempty"`
	Pr                   int32    `protobuf:"varint,6,opt,name=pr,proto3" json:"pr,omitempty"`
	CatgId               int32    `protobuf:"varint,7,opt,name=catg_id,json=catgId,proto3" json:"catg_id,omitempty"`
	GroupId              int32    `protobuf:"varint,8,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UnitId               int64    `protobuf:"varint,9,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPlayReq) Reset()         { *m = FindPlayReq{} }
func (m *FindPlayReq) String() string { return proto.CompactTextString(m) }
func (*FindPlayReq) ProtoMessage()    {}
func (*FindPlayReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{18}
}

func (m *FindPlayReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPlayReq.Unmarshal(m, b)
}
func (m *FindPlayReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPlayReq.Marshal(b, m, deterministic)
}
func (m *FindPlayReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPlayReq.Merge(m, src)
}
func (m *FindPlayReq) XXX_Size() int {
	return xxx_messageInfo_FindPlayReq.Size(m)
}
func (m *FindPlayReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPlayReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindPlayReq proto.InternalMessageInfo

func (m *FindPlayReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindPlayReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindPlayReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *FindPlayReq) GetPref() string {
	if m != nil {
		return m.Pref
	}
	return ""
}

func (m *FindPlayReq) GetActive() string {
	if m != nil {
		return m.Active
	}
	return ""
}

func (m *FindPlayReq) GetPr() int32 {
	if m != nil {
		return m.Pr
	}
	return 0
}

func (m *FindPlayReq) GetCatgId() int32 {
	if m != nil {
		return m.CatgId
	}
	return 0
}

func (m *FindPlayReq) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *FindPlayReq) GetUnitId() int64 {
	if m != nil {
		return m.UnitId
	}
	return 0
}

type FindPlayResp struct {
	Plays                []*Play  `protobuf:"bytes,1,rep,name=plays,proto3" json:"plays,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPlayResp) Reset()         { *m = FindPlayResp{} }
func (m *FindPlayResp) String() string { return proto.CompactTextString(m) }
func (*FindPlayResp) ProtoMessage()    {}
func (*FindPlayResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{19}
}

func (m *FindPlayResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPlayResp.Unmarshal(m, b)
}
func (m *FindPlayResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPlayResp.Marshal(b, m, deterministic)
}
func (m *FindPlayResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPlayResp.Merge(m, src)
}
func (m *FindPlayResp) XXX_Size() int {
	return xxx_messageInfo_FindPlayResp.Size(m)
}
func (m *FindPlayResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPlayResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindPlayResp proto.InternalMessageInfo

func (m *FindPlayResp) GetPlays() []*Play {
	if m != nil {
		return m.Plays
	}
	return nil
}

type Term struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartFrom            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	EndTo                *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_to,json=endTo,proto3" json:"end_to,omitempty"`
	OpenedAt             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=opened_at,json=openedAt,proto3" json:"opened_at,omitempty"`
	Codes                []string             `protobuf:"bytes,5,rep,name=codes,proto3" json:"codes,omitempty"`
	SettledAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	RevokedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Term) Reset()         { *m = Term{} }
func (m *Term) String() string { return proto.CompactTextString(m) }
func (*Term) ProtoMessage()    {}
func (*Term) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{20}
}

func (m *Term) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Term.Unmarshal(m, b)
}
func (m *Term) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Term.Marshal(b, m, deterministic)
}
func (m *Term) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Term.Merge(m, src)
}
func (m *Term) XXX_Size() int {
	return xxx_messageInfo_Term.Size(m)
}
func (m *Term) XXX_DiscardUnknown() {
	xxx_messageInfo_Term.DiscardUnknown(m)
}

var xxx_messageInfo_Term proto.InternalMessageInfo

func (m *Term) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Term) GetStartFrom() *timestamp.Timestamp {
	if m != nil {
		return m.StartFrom
	}
	return nil
}

func (m *Term) GetEndTo() *timestamp.Timestamp {
	if m != nil {
		return m.EndTo
	}
	return nil
}

func (m *Term) GetOpenedAt() *timestamp.Timestamp {
	if m != nil {
		return m.OpenedAt
	}
	return nil
}

func (m *Term) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *Term) GetSettledAt() *timestamp.Timestamp {
	if m != nil {
		return m.SettledAt
	}
	return nil
}

func (m *Term) GetRevokedAt() *timestamp.Timestamp {
	if m != nil {
		return m.RevokedAt
	}
	return nil
}

type CreateTermReq struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartFrom            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	EndTo                *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_to,json=endTo,proto3" json:"end_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateTermReq) Reset()         { *m = CreateTermReq{} }
func (m *CreateTermReq) String() string { return proto.CompactTextString(m) }
func (*CreateTermReq) ProtoMessage()    {}
func (*CreateTermReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{21}
}

func (m *CreateTermReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTermReq.Unmarshal(m, b)
}
func (m *CreateTermReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTermReq.Marshal(b, m, deterministic)
}
func (m *CreateTermReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTermReq.Merge(m, src)
}
func (m *CreateTermReq) XXX_Size() int {
	return xxx_messageInfo_CreateTermReq.Size(m)
}
func (m *CreateTermReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTermReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTermReq proto.InternalMessageInfo

func (m *CreateTermReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateTermReq) GetStartFrom() *timestamp.Timestamp {
	if m != nil {
		return m.StartFrom
	}
	return nil
}

func (m *CreateTermReq) GetEndTo() *timestamp.Timestamp {
	if m != nil {
		return m.EndTo
	}
	return nil
}

type GetTermReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTermReq) Reset()         { *m = GetTermReq{} }
func (m *GetTermReq) String() string { return proto.CompactTextString(m) }
func (*GetTermReq) ProtoMessage()    {}
func (*GetTermReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{22}
}

func (m *GetTermReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTermReq.Unmarshal(m, b)
}
func (m *GetTermReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTermReq.Marshal(b, m, deterministic)
}
func (m *GetTermReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTermReq.Merge(m, src)
}
func (m *GetTermReq) XXX_Size() int {
	return xxx_messageInfo_GetTermReq.Size(m)
}
func (m *GetTermReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTermReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTermReq proto.InternalMessageInfo

func (m *GetTermReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindTermReq struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                 string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	StartFrom            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_from,json=startFrom,proto3" json:"start_from,omitempty"`
	EndTo                *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_to,json=endTo,proto3" json:"end_to,omitempty"`
	Limit                int32                `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy              string               `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindTermReq) Reset()         { *m = FindTermReq{} }
func (m *FindTermReq) String() string { return proto.CompactTextString(m) }
func (*FindTermReq) ProtoMessage()    {}
func (*FindTermReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{23}
}

func (m *FindTermReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindTermReq.Unmarshal(m, b)
}
func (m *FindTermReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindTermReq.Marshal(b, m, deterministic)
}
func (m *FindTermReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindTermReq.Merge(m, src)
}
func (m *FindTermReq) XXX_Size() int {
	return xxx_messageInfo_FindTermReq.Size(m)
}
func (m *FindTermReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindTermReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindTermReq proto.InternalMessageInfo

func (m *FindTermReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindTermReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *FindTermReq) GetStartFrom() *timestamp.Timestamp {
	if m != nil {
		return m.StartFrom
	}
	return nil
}

func (m *FindTermReq) GetEndTo() *timestamp.Timestamp {
	if m != nil {
		return m.EndTo
	}
	return nil
}

func (m *FindTermReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindTermReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FindTermReq) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type FindTermResp struct {
	Terms                []*Term  `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindTermResp) Reset()         { *m = FindTermResp{} }
func (m *FindTermResp) String() string { return proto.CompactTextString(m) }
func (*FindTermResp) ProtoMessage()    {}
func (*FindTermResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{24}
}

func (m *FindTermResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindTermResp.Unmarshal(m, b)
}
func (m *FindTermResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindTermResp.Marshal(b, m, deterministic)
}
func (m *FindTermResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindTermResp.Merge(m, src)
}
func (m *FindTermResp) XXX_Size() int {
	return xxx_messageInfo_FindTermResp.Size(m)
}
func (m *FindTermResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindTermResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindTermResp proto.InternalMessageInfo

func (m *FindTermResp) GetTerms() []*Term {
	if m != nil {
		return m.Terms
	}
	return nil
}

type CountFindTermResp struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountFindTermResp) Reset()         { *m = CountFindTermResp{} }
func (m *CountFindTermResp) String() string { return proto.CompactTextString(m) }
func (*CountFindTermResp) ProtoMessage()    {}
func (*CountFindTermResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{25}
}

func (m *CountFindTermResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountFindTermResp.Unmarshal(m, b)
}
func (m *CountFindTermResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountFindTermResp.Marshal(b, m, deterministic)
}
func (m *CountFindTermResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountFindTermResp.Merge(m, src)
}
func (m *CountFindTermResp) XXX_Size() int {
	return xxx_messageInfo_CountFindTermResp.Size(m)
}
func (m *CountFindTermResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CountFindTermResp.DiscardUnknown(m)
}

var xxx_messageInfo_CountFindTermResp proto.InternalMessageInfo

func (m *CountFindTermResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type SeTermtResultReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Codes                []string `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeTermtResultReq) Reset()         { *m = SeTermtResultReq{} }
func (m *SeTermtResultReq) String() string { return proto.CompactTextString(m) }
func (*SeTermtResultReq) ProtoMessage()    {}
func (*SeTermtResultReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{26}
}

func (m *SeTermtResultReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeTermtResultReq.Unmarshal(m, b)
}
func (m *SeTermtResultReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeTermtResultReq.Marshal(b, m, deterministic)
}
func (m *SeTermtResultReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeTermtResultReq.Merge(m, src)
}
func (m *SeTermtResultReq) XXX_Size() int {
	return xxx_messageInfo_SeTermtResultReq.Size(m)
}
func (m *SeTermtResultReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SeTermtResultReq.DiscardUnknown(m)
}

var xxx_messageInfo_SeTermtResultReq proto.InternalMessageInfo

func (m *SeTermtResultReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SeTermtResultReq) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

type UpdateTermResultReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Codes                []string `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTermResultReq) Reset()         { *m = UpdateTermResultReq{} }
func (m *UpdateTermResultReq) String() string { return proto.CompactTextString(m) }
func (*UpdateTermResultReq) ProtoMessage()    {}
func (*UpdateTermResultReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{27}
}

func (m *UpdateTermResultReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTermResultReq.Unmarshal(m, b)
}
func (m *UpdateTermResultReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTermResultReq.Marshal(b, m, deterministic)
}
func (m *UpdateTermResultReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTermResultReq.Merge(m, src)
}
func (m *UpdateTermResultReq) XXX_Size() int {
	return xxx_messageInfo_UpdateTermResultReq.Size(m)
}
func (m *UpdateTermResultReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTermResultReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTermResultReq proto.InternalMessageInfo

func (m *UpdateTermResultReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateTermResultReq) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

type SettleTermReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleTermReq) Reset()         { *m = SettleTermReq{} }
func (m *SettleTermReq) String() string { return proto.CompactTextString(m) }
func (*SettleTermReq) ProtoMessage()    {}
func (*SettleTermReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{28}
}

func (m *SettleTermReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleTermReq.Unmarshal(m, b)
}
func (m *SettleTermReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleTermReq.Marshal(b, m, deterministic)
}
func (m *SettleTermReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleTermReq.Merge(m, src)
}
func (m *SettleTermReq) XXX_Size() int {
	return xxx_messageInfo_SettleTermReq.Size(m)
}
func (m *SettleTermReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleTermReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettleTermReq proto.InternalMessageInfo

func (m *SettleTermReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RevokeTermReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeTermReq) Reset()         { *m = RevokeTermReq{} }
func (m *RevokeTermReq) String() string { return proto.CompactTextString(m) }
func (*RevokeTermReq) ProtoMessage()    {}
func (*RevokeTermReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{29}
}

func (m *RevokeTermReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeTermReq.Unmarshal(m, b)
}
func (m *RevokeTermReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeTermReq.Marshal(b, m, deterministic)
}
func (m *RevokeTermReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeTermReq.Merge(m, src)
}
func (m *RevokeTermReq) XXX_Size() int {
	return xxx_messageInfo_RevokeTermReq.Size(m)
}
func (m *RevokeTermReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeTermReq.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeTermReq proto.InternalMessageInfo

func (m *RevokeTermReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Bet struct {
	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UserId    int64                `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 赔率
	Odds   float64 `protobuf:"fixed64,4,opt,name=odds,proto3" json:"odds,omitempty"`
	PlayId int32   `protobuf:"varint,5,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	UnitId int64   `protobuf:"varint,6,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	// 返点率
	Comm                 float64    `protobuf:"fixed64,7,opt,name=comm,proto3" json:"comm,omitempty"`
	ChaseStop            bool       `protobuf:"varint,8,opt,name=chase_stop,json=chaseStop,proto3" json:"chase_stop,omitempty"`
	Codes                []string   `protobuf:"bytes,9,rep,name=codes,proto3" json:"codes,omitempty"`
	Title                string     `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Plans                []*BetPlan `protobuf:"bytes,11,rep,name=plans,proto3" json:"plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bet) Reset()         { *m = Bet{} }
func (m *Bet) String() string { return proto.CompactTextString(m) }
func (*Bet) ProtoMessage()    {}
func (*Bet) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{30}
}

func (m *Bet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bet.Unmarshal(m, b)
}
func (m *Bet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bet.Marshal(b, m, deterministic)
}
func (m *Bet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bet.Merge(m, src)
}
func (m *Bet) XXX_Size() int {
	return xxx_messageInfo_Bet.Size(m)
}
func (m *Bet) XXX_DiscardUnknown() {
	xxx_messageInfo_Bet.DiscardUnknown(m)
}

var xxx_messageInfo_Bet proto.InternalMessageInfo

func (m *Bet) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Bet) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Bet) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Bet) GetOdds() float64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *Bet) GetPlayId() int32 {
	if m != nil {
		return m.PlayId
	}
	return 0
}

func (m *Bet) GetUnitId() int64 {
	if m != nil {
		return m.UnitId
	}
	return 0
}

func (m *Bet) GetComm() float64 {
	if m != nil {
		return m.Comm
	}
	return 0
}

func (m *Bet) GetChaseStop() bool {
	if m != nil {
		return m.ChaseStop
	}
	return false
}

func (m *Bet) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *Bet) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Bet) GetPlans() []*BetPlan {
	if m != nil {
		return m.Plans
	}
	return nil
}

type BetPlan struct {
	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BetId int64 `protobuf:"varint,2,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`
	// 期号
	TermId int64 `protobuf:"varint,3,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	// 倍率
	Times int64 `protobuf:"varint,4,opt,name=times,proto3" json:"times,omitempty"`
	// 投注数
	Qty int64 `protobuf:"varint,5,opt,name=qty,proto3" json:"qty,omitempty"`
	// 应支付数额
	Payment float64 `protobuf:"fixed64,6,opt,name=payment,proto3" json:"payment,omitempty"`
	// 返点总额, 结算即返还
	Rebate float64 `protobuf:"fixed64,7,opt,name=rebate,proto3" json:"rebate,omitempty"`
	// 单注的奖金
	Bonus                float64       `protobuf:"fixed64,8,opt,name=bonus,proto3" json:"bonus,omitempty"`
	Stats                *BetPlanStats `protobuf:"bytes,9,opt,name=Stats,proto3" json:"Stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BetPlan) Reset()         { *m = BetPlan{} }
func (m *BetPlan) String() string { return proto.CompactTextString(m) }
func (*BetPlan) ProtoMessage()    {}
func (*BetPlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{31}
}

func (m *BetPlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetPlan.Unmarshal(m, b)
}
func (m *BetPlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetPlan.Marshal(b, m, deterministic)
}
func (m *BetPlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetPlan.Merge(m, src)
}
func (m *BetPlan) XXX_Size() int {
	return xxx_messageInfo_BetPlan.Size(m)
}
func (m *BetPlan) XXX_DiscardUnknown() {
	xxx_messageInfo_BetPlan.DiscardUnknown(m)
}

var xxx_messageInfo_BetPlan proto.InternalMessageInfo

func (m *BetPlan) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BetPlan) GetBetId() int64 {
	if m != nil {
		return m.BetId
	}
	return 0
}

func (m *BetPlan) GetTermId() int64 {
	if m != nil {
		return m.TermId
	}
	return 0
}

func (m *BetPlan) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *BetPlan) GetQty() int64 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *BetPlan) GetPayment() float64 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *BetPlan) GetRebate() float64 {
	if m != nil {
		return m.Rebate
	}
	return 0
}

func (m *BetPlan) GetBonus() float64 {
	if m != nil {
		return m.Bonus
	}
	return 0
}

func (m *BetPlan) GetStats() *BetPlanStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type BetPlanStats struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BetId                int64                `protobuf:"varint,2,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`
	Settled              bool                 `protobuf:"varint,3,opt,name=settled,proto3" json:"settled,omitempty"`
	SettledAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	Revoked              bool                 `protobuf:"varint,5,opt,name=revoked,proto3" json:"revoked,omitempty"`
	RevokedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	Payment              float64              `protobuf:"fixed64,7,opt,name=payment,proto3" json:"payment,omitempty"`
	Bonus                float64              `protobuf:"fixed64,8,opt,name=Bonus,proto3" json:"Bonus,omitempty"`
	Rebate               float64              `protobuf:"fixed64,9,opt,name=rebate,proto3" json:"rebate,omitempty"`
	Win                  int64                `protobuf:"varint,10,opt,name=win,proto3" json:"win,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BetPlanStats) Reset()         { *m = BetPlanStats{} }
func (m *BetPlanStats) String() string { return proto.CompactTextString(m) }
func (*BetPlanStats) ProtoMessage()    {}
func (*BetPlanStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{32}
}

func (m *BetPlanStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetPlanStats.Unmarshal(m, b)
}
func (m *BetPlanStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetPlanStats.Marshal(b, m, deterministic)
}
func (m *BetPlanStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetPlanStats.Merge(m, src)
}
func (m *BetPlanStats) XXX_Size() int {
	return xxx_messageInfo_BetPlanStats.Size(m)
}
func (m *BetPlanStats) XXX_DiscardUnknown() {
	xxx_messageInfo_BetPlanStats.DiscardUnknown(m)
}

var xxx_messageInfo_BetPlanStats proto.InternalMessageInfo

func (m *BetPlanStats) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BetPlanStats) GetBetId() int64 {
	if m != nil {
		return m.BetId
	}
	return 0
}

func (m *BetPlanStats) GetSettled() bool {
	if m != nil {
		return m.Settled
	}
	return false
}

func (m *BetPlanStats) GetSettledAt() *timestamp.Timestamp {
	if m != nil {
		return m.SettledAt
	}
	return nil
}

func (m *BetPlanStats) GetRevoked() bool {
	if m != nil {
		return m.Revoked
	}
	return false
}

func (m *BetPlanStats) GetRevokedAt() *timestamp.Timestamp {
	if m != nil {
		return m.RevokedAt
	}
	return nil
}

func (m *BetPlanStats) GetPayment() float64 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *BetPlanStats) GetBonus() float64 {
	if m != nil {
		return m.Bonus
	}
	return 0
}

func (m *BetPlanStats) GetRebate() float64 {
	if m != nil {
		return m.Rebate
	}
	return 0
}

func (m *BetPlanStats) GetWin() int64 {
	if m != nil {
		return m.Win
	}
	return 0
}

type CreateBetReq struct {
	UserId               int64      `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Odds                 float64    `protobuf:"fixed64,2,opt,name=odds,proto3" json:"odds,omitempty"`
	ChaseStop            bool       `protobuf:"varint,3,opt,name=chase_stop,json=chaseStop,proto3" json:"chase_stop,omitempty"`
	PlayId               int32      `protobuf:"varint,4,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Comm                 float64    `protobuf:"fixed64,5,opt,name=comm,proto3" json:"comm,omitempty"`
	UnitId               int64      `protobuf:"varint,6,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Codes                []string   `protobuf:"bytes,7,rep,name=codes,proto3" json:"codes,omitempty"`
	Plans                []*BetPlan `protobuf:"bytes,8,rep,name=plans,proto3" json:"plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateBetReq) Reset()         { *m = CreateBetReq{} }
func (m *CreateBetReq) String() string { return proto.CompactTextString(m) }
func (*CreateBetReq) ProtoMessage()    {}
func (*CreateBetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{33}
}

func (m *CreateBetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBetReq.Unmarshal(m, b)
}
func (m *CreateBetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBetReq.Marshal(b, m, deterministic)
}
func (m *CreateBetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBetReq.Merge(m, src)
}
func (m *CreateBetReq) XXX_Size() int {
	return xxx_messageInfo_CreateBetReq.Size(m)
}
func (m *CreateBetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBetReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBetReq proto.InternalMessageInfo

func (m *CreateBetReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateBetReq) GetOdds() float64 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *CreateBetReq) GetChaseStop() bool {
	if m != nil {
		return m.ChaseStop
	}
	return false
}

func (m *CreateBetReq) GetPlayId() int32 {
	if m != nil {
		return m.PlayId
	}
	return 0
}

func (m *CreateBetReq) GetComm() float64 {
	if m != nil {
		return m.Comm
	}
	return 0
}

func (m *CreateBetReq) GetUnitId() int64 {
	if m != nil {
		return m.UnitId
	}
	return 0
}

func (m *CreateBetReq) GetCodes() []string {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *CreateBetReq) GetPlans() []*BetPlan {
	if m != nil {
		return m.Plans
	}
	return nil
}

type GetBetReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBetReq) Reset()         { *m = GetBetReq{} }
func (m *GetBetReq) String() string { return proto.CompactTextString(m) }
func (*GetBetReq) ProtoMessage()    {}
func (*GetBetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{34}
}

func (m *GetBetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBetReq.Unmarshal(m, b)
}
func (m *GetBetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBetReq.Marshal(b, m, deterministic)
}
func (m *GetBetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBetReq.Merge(m, src)
}
func (m *GetBetReq) XXX_Size() int {
	return xxx_messageInfo_GetBetReq.Size(m)
}
func (m *GetBetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBetReq proto.InternalMessageInfo

func (m *GetBetReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindBetReq struct {
	UserId               int64                `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlayId               int32                `protobuf:"varint,2,opt,name=play_id,json=playId,proto3" json:"play_id,omitempty"`
	Code                 string               `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	CreatedFrom          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_from,json=createdFrom,proto3" json:"created_from,omitempty"`
	CreatedTo            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_to,json=createdTo,proto3" json:"created_to,omitempty"`
	TermId               int64                `protobuf:"varint,6,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	Win                  string               `protobuf:"bytes,7,opt,name=win,proto3" json:"win,omitempty"`
	Settled              string               `protobuf:"bytes,8,opt,name=settled,proto3" json:"settled,omitempty"`
	Revoked              string               `protobuf:"bytes,9,opt,name=revoked,proto3" json:"revoked,omitempty"`
	Limit                int32                `protobuf:"varint,14,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,15,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FindBetReq) Reset()         { *m = FindBetReq{} }
func (m *FindBetReq) String() string { return proto.CompactTextString(m) }
func (*FindBetReq) ProtoMessage()    {}
func (*FindBetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{35}
}

func (m *FindBetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBetReq.Unmarshal(m, b)
}
func (m *FindBetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBetReq.Marshal(b, m, deterministic)
}
func (m *FindBetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBetReq.Merge(m, src)
}
func (m *FindBetReq) XXX_Size() int {
	return xxx_messageInfo_FindBetReq.Size(m)
}
func (m *FindBetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBetReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindBetReq proto.InternalMessageInfo

func (m *FindBetReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *FindBetReq) GetPlayId() int32 {
	if m != nil {
		return m.PlayId
	}
	return 0
}

func (m *FindBetReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *FindBetReq) GetCreatedFrom() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedFrom
	}
	return nil
}

func (m *FindBetReq) GetCreatedTo() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTo
	}
	return nil
}

func (m *FindBetReq) GetTermId() int64 {
	if m != nil {
		return m.TermId
	}
	return 0
}

func (m *FindBetReq) GetWin() string {
	if m != nil {
		return m.Win
	}
	return ""
}

func (m *FindBetReq) GetSettled() string {
	if m != nil {
		return m.Settled
	}
	return ""
}

func (m *FindBetReq) GetRevoked() string {
	if m != nil {
		return m.Revoked
	}
	return ""
}

func (m *FindBetReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindBetReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FindBetResp struct {
	Bets                 []*Bet   `protobuf:"bytes,1,rep,name=bets,proto3" json:"bets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindBetResp) Reset()         { *m = FindBetResp{} }
func (m *FindBetResp) String() string { return proto.CompactTextString(m) }
func (*FindBetResp) ProtoMessage()    {}
func (*FindBetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{36}
}

func (m *FindBetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBetResp.Unmarshal(m, b)
}
func (m *FindBetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBetResp.Marshal(b, m, deterministic)
}
func (m *FindBetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBetResp.Merge(m, src)
}
func (m *FindBetResp) XXX_Size() int {
	return xxx_messageInfo_FindBetResp.Size(m)
}
func (m *FindBetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBetResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindBetResp proto.InternalMessageInfo

func (m *FindBetResp) GetBets() []*Bet {
	if m != nil {
		return m.Bets
	}
	return nil
}

type CountFindBetResp struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountFindBetResp) Reset()         { *m = CountFindBetResp{} }
func (m *CountFindBetResp) String() string { return proto.CompactTextString(m) }
func (*CountFindBetResp) ProtoMessage()    {}
func (*CountFindBetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{37}
}

func (m *CountFindBetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountFindBetResp.Unmarshal(m, b)
}
func (m *CountFindBetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountFindBetResp.Marshal(b, m, deterministic)
}
func (m *CountFindBetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountFindBetResp.Merge(m, src)
}
func (m *CountFindBetResp) XXX_Size() int {
	return xxx_messageInfo_CountFindBetResp.Size(m)
}
func (m *CountFindBetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CountFindBetResp.DiscardUnknown(m)
}

var xxx_messageInfo_CountFindBetResp proto.InternalMessageInfo

func (m *CountFindBetResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetBetStatsReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBetStatsReq) Reset()         { *m = GetBetStatsReq{} }
func (m *GetBetStatsReq) String() string { return proto.CompactTextString(m) }
func (*GetBetStatsReq) ProtoMessage()    {}
func (*GetBetStatsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{38}
}

func (m *GetBetStatsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBetStatsReq.Unmarshal(m, b)
}
func (m *GetBetStatsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBetStatsReq.Marshal(b, m, deterministic)
}
func (m *GetBetStatsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBetStatsReq.Merge(m, src)
}
func (m *GetBetStatsReq) XXX_Size() int {
	return xxx_messageInfo_GetBetStatsReq.Size(m)
}
func (m *GetBetStatsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBetStatsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBetStatsReq proto.InternalMessageInfo

func (m *GetBetStatsReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetBetStatsResp struct {
	Stats                []*BetPlanStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetBetStatsResp) Reset()         { *m = GetBetStatsResp{} }
func (m *GetBetStatsResp) String() string { return proto.CompactTextString(m) }
func (*GetBetStatsResp) ProtoMessage()    {}
func (*GetBetStatsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{39}
}

func (m *GetBetStatsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBetStatsResp.Unmarshal(m, b)
}
func (m *GetBetStatsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBetStatsResp.Marshal(b, m, deterministic)
}
func (m *GetBetStatsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBetStatsResp.Merge(m, src)
}
func (m *GetBetStatsResp) XXX_Size() int {
	return xxx_messageInfo_GetBetStatsResp.Size(m)
}
func (m *GetBetStatsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBetStatsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBetStatsResp proto.InternalMessageInfo

func (m *GetBetStatsResp) GetStats() []*BetPlanStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type GetBetPlanReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBetPlanReq) Reset()         { *m = GetBetPlanReq{} }
func (m *GetBetPlanReq) String() string { return proto.CompactTextString(m) }
func (*GetBetPlanReq) ProtoMessage()    {}
func (*GetBetPlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{40}
}

func (m *GetBetPlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBetPlanReq.Unmarshal(m, b)
}
func (m *GetBetPlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBetPlanReq.Marshal(b, m, deterministic)
}
func (m *GetBetPlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBetPlanReq.Merge(m, src)
}
func (m *GetBetPlanReq) XXX_Size() int {
	return xxx_messageInfo_GetBetPlanReq.Size(m)
}
func (m *GetBetPlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBetPlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBetPlanReq proto.InternalMessageInfo

func (m *GetBetPlanReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetBetPlanStatsReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlanId               int64    `protobuf:"varint,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBetPlanStatsReq) Reset()         { *m = GetBetPlanStatsReq{} }
func (m *GetBetPlanStatsReq) String() string { return proto.CompactTextString(m) }
func (*GetBetPlanStatsReq) ProtoMessage()    {}
func (*GetBetPlanStatsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{41}
}

func (m *GetBetPlanStatsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBetPlanStatsReq.Unmarshal(m, b)
}
func (m *GetBetPlanStatsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBetPlanStatsReq.Marshal(b, m, deterministic)
}
func (m *GetBetPlanStatsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBetPlanStatsReq.Merge(m, src)
}
func (m *GetBetPlanStatsReq) XXX_Size() int {
	return xxx_messageInfo_GetBetPlanStatsReq.Size(m)
}
func (m *GetBetPlanStatsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBetPlanStatsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBetPlanStatsReq proto.InternalMessageInfo

func (m *GetBetPlanStatsReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetBetPlanStatsReq) GetPlanId() int64 {
	if m != nil {
		return m.PlanId
	}
	return 0
}

type SettleBetPlanReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlanId               int64    `protobuf:"varint,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Win                  int64    `protobuf:"varint,3,opt,name=win,proto3" json:"win,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleBetPlanReq) Reset()         { *m = SettleBetPlanReq{} }
func (m *SettleBetPlanReq) String() string { return proto.CompactTextString(m) }
func (*SettleBetPlanReq) ProtoMessage()    {}
func (*SettleBetPlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{42}
}

func (m *SettleBetPlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleBetPlanReq.Unmarshal(m, b)
}
func (m *SettleBetPlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleBetPlanReq.Marshal(b, m, deterministic)
}
func (m *SettleBetPlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleBetPlanReq.Merge(m, src)
}
func (m *SettleBetPlanReq) XXX_Size() int {
	return xxx_messageInfo_SettleBetPlanReq.Size(m)
}
func (m *SettleBetPlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleBetPlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_SettleBetPlanReq proto.InternalMessageInfo

func (m *SettleBetPlanReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SettleBetPlanReq) GetPlanId() int64 {
	if m != nil {
		return m.PlanId
	}
	return 0
}

func (m *SettleBetPlanReq) GetWin() int64 {
	if m != nil {
		return m.Win
	}
	return 0
}

type SettleBetPlanResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleBetPlanResp) Reset()         { *m = SettleBetPlanResp{} }
func (m *SettleBetPlanResp) String() string { return proto.CompactTextString(m) }
func (*SettleBetPlanResp) ProtoMessage()    {}
func (*SettleBetPlanResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{43}
}

func (m *SettleBetPlanResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleBetPlanResp.Unmarshal(m, b)
}
func (m *SettleBetPlanResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleBetPlanResp.Marshal(b, m, deterministic)
}
func (m *SettleBetPlanResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleBetPlanResp.Merge(m, src)
}
func (m *SettleBetPlanResp) XXX_Size() int {
	return xxx_messageInfo_SettleBetPlanResp.Size(m)
}
func (m *SettleBetPlanResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleBetPlanResp.DiscardUnknown(m)
}

var xxx_messageInfo_SettleBetPlanResp proto.InternalMessageInfo

func (m *SettleBetPlanResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RevokeBetPlanReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlanId               int64    `protobuf:"varint,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeBetPlanReq) Reset()         { *m = RevokeBetPlanReq{} }
func (m *RevokeBetPlanReq) String() string { return proto.CompactTextString(m) }
func (*RevokeBetPlanReq) ProtoMessage()    {}
func (*RevokeBetPlanReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{44}
}

func (m *RevokeBetPlanReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeBetPlanReq.Unmarshal(m, b)
}
func (m *RevokeBetPlanReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeBetPlanReq.Marshal(b, m, deterministic)
}
func (m *RevokeBetPlanReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeBetPlanReq.Merge(m, src)
}
func (m *RevokeBetPlanReq) XXX_Size() int {
	return xxx_messageInfo_RevokeBetPlanReq.Size(m)
}
func (m *RevokeBetPlanReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeBetPlanReq.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeBetPlanReq proto.InternalMessageInfo

func (m *RevokeBetPlanReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RevokeBetPlanReq) GetPlanId() int64 {
	if m != nil {
		return m.PlanId
	}
	return 0
}

type RevokeBetPlanResp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeBetPlanResp) Reset()         { *m = RevokeBetPlanResp{} }
func (m *RevokeBetPlanResp) String() string { return proto.CompactTextString(m) }
func (*RevokeBetPlanResp) ProtoMessage()    {}
func (*RevokeBetPlanResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa1471a026d6082a, []int{45}
}

func (m *RevokeBetPlanResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevokeBetPlanResp.Unmarshal(m, b)
}
func (m *RevokeBetPlanResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevokeBetPlanResp.Marshal(b, m, deterministic)
}
func (m *RevokeBetPlanResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeBetPlanResp.Merge(m, src)
}
func (m *RevokeBetPlanResp) XXX_Size() int {
	return xxx_messageInfo_RevokeBetPlanResp.Size(m)
}
func (m *RevokeBetPlanResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeBetPlanResp.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeBetPlanResp proto.InternalMessageInfo

func (m *RevokeBetPlanResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Config)(nil), "cqssc.Config")
	proto.RegisterType((*GetConfigReq)(nil), "cqssc.GetConfigReq")
	proto.RegisterType((*UpdateConfigReq)(nil), "cqssc.UpdateConfigReq")
	proto.RegisterType((*Unit)(nil), "cqssc.Unit")
	proto.RegisterType((*GetUnitReq)(nil), "cqssc.GetUnitReq")
	proto.RegisterType((*FindUnitReq)(nil), "cqssc.FindUnitReq")
	proto.RegisterType((*FindUnitResp)(nil), "cqssc.FindUnitResp")
	proto.RegisterType((*Catg)(nil), "cqssc.Catg")
	proto.RegisterType((*GetCatgReq)(nil), "cqssc.GetCatgReq")
	proto.RegisterType((*FindCatgReq)(nil), "cqssc.FindCatgReq")
	proto.RegisterType((*FindCatgResp)(nil), "cqssc.FindCatgResp")
	proto.RegisterType((*Group)(nil), "cqssc.Group")
	proto.RegisterType((*GetGroupReq)(nil), "cqssc.GetGroupReq")
	proto.RegisterType((*FindGroupReq)(nil), "cqssc.FindGroupReq")
	proto.RegisterType((*FindGroupResp)(nil), "cqssc.FindGroupResp")
	proto.RegisterType((*Play)(nil), "cqssc.Play")
	proto.RegisterType((*GetPlayReq)(nil), "cqssc.GetPlayReq")
	proto.RegisterType((*UpdatePlayReq)(nil), "cqssc.UpdatePlayReq")
	proto.RegisterType((*FindPlayReq)(nil), "cqssc.FindPlayReq")
	proto.RegisterType((*FindPlayResp)(nil), "cqssc.FindPlayResp")
	proto.RegisterType((*Term)(nil), "cqssc.Term")
	proto.RegisterType((*CreateTermReq)(nil), "cqssc.CreateTermReq")
	proto.RegisterType((*GetTermReq)(nil), "cqssc.GetTermReq")
	proto.RegisterType((*FindTermReq)(nil), "cqssc.FindTermReq")
	proto.RegisterType((*FindTermResp)(nil), "cqssc.FindTermResp")
	proto.RegisterType((*CountFindTermResp)(nil), "cqssc.CountFindTermResp")
	proto.RegisterType((*SeTermtResultReq)(nil), "cqssc.SeTermtResultReq")
	proto.RegisterType((*UpdateTermResultReq)(nil), "cqssc.UpdateTermResultReq")
	proto.RegisterType((*SettleTermReq)(nil), "cqssc.SettleTermReq")
	proto.RegisterType((*RevokeTermReq)(nil), "cqssc.RevokeTermReq")
	proto.RegisterType((*Bet)(nil), "cqssc.Bet")
	proto.RegisterType((*BetPlan)(nil), "cqssc.BetPlan")
	proto.RegisterType((*BetPlanStats)(nil), "cqssc.BetPlanStats")
	proto.RegisterType((*CreateBetReq)(nil), "cqssc.CreateBetReq")
	proto.RegisterType((*GetBetReq)(nil), "cqssc.GetBetReq")
	proto.RegisterType((*FindBetReq)(nil), "cqssc.FindBetReq")
	proto.RegisterType((*FindBetResp)(nil), "cqssc.FindBetResp")
	proto.RegisterType((*CountFindBetResp)(nil), "cqssc.CountFindBetResp")
	proto.RegisterType((*GetBetStatsReq)(nil), "cqssc.GetBetStatsReq")
	proto.RegisterType((*GetBetStatsResp)(nil), "cqssc.GetBetStatsResp")
	proto.RegisterType((*GetBetPlanReq)(nil), "cqssc.GetBetPlanReq")
	proto.RegisterType((*GetBetPlanStatsReq)(nil), "cqssc.GetBetPlanStatsReq")
	proto.RegisterType((*SettleBetPlanReq)(nil), "cqssc.SettleBetPlanReq")
	proto.RegisterType((*SettleBetPlanResp)(nil), "cqssc.SettleBetPlanResp")
	proto.RegisterType((*RevokeBetPlanReq)(nil), "cqssc.RevokeBetPlanReq")
	proto.RegisterType((*RevokeBetPlanResp)(nil), "cqssc.RevokeBetPlanResp")
}

func init() {
	proto.RegisterFile("lottery/ssc/cqssc/proto/cqssc.proto", fileDescriptor_aa1471a026d6082a)
}

var fileDescriptor_aa1471a026d6082a = []byte{
	// 2016 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcd, 0x6f, 0xe3, 0xc6,
	0x15, 0x8f, 0x3e, 0x28, 0x8a, 0xcf, 0x92, 0x57, 0x1e, 0x2b, 0x6b, 0x46, 0xdd, 0x24, 0xea, 0x34,
	0x40, 0x95, 0x02, 0x6b, 0x21, 0x2e, 0x8a, 0xb6, 0xd9, 0x6c, 0x93, 0xb5, 0x8b, 0x18, 0x06, 0x5a,
	0x34, 0xa0, 0x37, 0x2d, 0x7a, 0x32, 0x28, 0x71, 0xac, 0x10, 0x91, 0x48, 0x9a, 0x1c, 0x6d, 0x61,
	0x04, 0xbd, 0xf4, 0xde, 0x53, 0xfb, 0xa7, 0xf4, 0xd2, 0x6b, 0x6f, 0x45, 0x7b, 0xeb, 0xa9, 0x40,
	0x8f, 0x39, 0xf4, 0xcf, 0x28, 0xe6, 0xcd, 0x0c, 0x39, 0xa4, 0x28, 0xaf, 0x6c, 0x2c, 0x7a, 0x21,
	0xf8, 0xe6, 0xe3, 0x37, 0xef, 0xfb, 0xcd, 0x1b, 0xf8, 0xde, 0x32, 0xe6, 0x9c, 0xa5, 0xb7, 0xd3,
	0x2c, 0x9b, 0x4f, 0xe7, 0x37, 0xe2, 0x9b, 0xa4, 0x31, 0x8f, 0xe5, 0xff, 0x31, 0xfe, 0x13, 0x0b,
	0x89, 0xd1, 0x93, 0x45, 0x1c, 0x2f, 0x96, 0x6c, 0xea, 0x27, 0xe1, 0xd4, 0x8f, 0xa2, 0x98, 0xfb,
	0x3c, 0x8c, 0xa3, 0x4c, 0x2e, 0x1a, 0x3d, 0x5b, 0x84, 0xfc, 0xab, 0xf5, 0xec, 0x78, 0x1e, 0xaf,
	0xa6, 0x8b, 0x78, 0xe9, 0x47, 0x0b, 0x89, 0x34, 0x5b, 0x5f, 0x4f, 0x13, 0x7e, 0x9b, 0xb0, 0x6c,
	0xca, 0xc3, 0x15, 0xcb, 0xb8, 0xbf, 0x4a, 0x8a, 0x3f, 0xb9, 0x99, 0xfe, 0xb9, 0x01, 0x9d, 0xb3,
	0x38, 0xba, 0x0e, 0x17, 0x64, 0x1f, 0x9a, 0x61, 0xe0, 0x36, 0xc6, 0x8d, 0x49, 0xcb, 0x6b, 0x86,
	0x01, 0x21, 0xd0, 0x8e, 0xfc, 0x15, 0x73, 0x9b, 0xe3, 0xc6, 0xc4, 0xf1, 0xf0, 0x9f, 0x0c, 0xa0,
	0xc5, 0xfd, 0x85, 0xdb, 0xc2, 0x21, 0xf1, 0x2b, 0x56, 0xc5, 0x41, 0x90, 0xb9, 0xed, 0x71, 0x63,
	0xd2, 0xf0, 0xf0, 0x5f, 0x8c, 0xcd, 0xe3, 0xd5, 0xca, 0xb5, 0xe4, 0x98, 0xf8, 0x27, 0x43, 0xb0,
	0x92, 0x34, 0x9c, 0x33, 0xb7, 0x83, 0x83, 0x92, 0x20, 0x8f, 0xa1, 0xe3, 0xcf, 0x79, 0xf8, 0x8a,
	0xb9, 0xf6, 0xb8, 0x31, 0xe9, 0x7a, 0x8a, 0xa2, 0xfb, 0xd0, 0x3b, 0x67, 0x5c, 0x32, 0xe6, 0xb1,
	0x1b, 0x7a, 0x01, 0x8f, 0xbe, 0x4c, 0x02, 0x9f, 0xb3, 0x7c, 0xa8, 0x8e, 0x5d, 0x64, 0xa4, 0x59,
	0xc3, 0x48, 0xab, 0x60, 0x84, 0x7e, 0x06, 0xed, 0x2f, 0xa3, 0x90, 0xef, 0x24, 0xee, 0x10, 0xac,
	0x57, 0xfe, 0x72, 0xcd, 0x14, 0x80, 0x24, 0xe8, 0x13, 0x80, 0x73, 0xc6, 0x05, 0x48, 0x0d, 0x1f,
	0xf4, 0x1c, 0xf6, 0x3e, 0x0f, 0xa3, 0x60, 0xcb, 0xf4, 0x3d, 0x8e, 0xf9, 0x08, 0x7a, 0x05, 0x50,
	0x96, 0x90, 0xef, 0x82, 0xb5, 0x8e, 0x42, 0x9e, 0xb9, 0x8d, 0x71, 0x6b, 0xb2, 0x77, 0xb2, 0x77,
	0x2c, 0x3d, 0x05, 0xe7, 0xe5, 0x0c, 0xfd, 0x02, 0xda, 0x67, 0x3e, 0x37, 0x4d, 0x69, 0xdd, 0xcf,
	0x94, 0x49, 0xca, 0xae, 0xd1, 0x94, 0x5d, 0x0f, 0xff, 0x95, 0xac, 0x02, 0xb4, 0x2c, 0x0c, 0xe2,
	0xd2, 0xdf, 0x48, 0x59, 0xb7, 0x4c, 0x3f, 0xe0, 0x58, 0x47, 0x1d, 0xab, 0x64, 0x97, 0xc0, 0x52,
	0xf6, 0xb9, 0xcf, 0x17, 0x55, 0xd9, 0x71, 0x5e, 0xce, 0xd0, 0xe7, 0x60, 0x9d, 0xa7, 0xf1, 0x3a,
	0x79, 0x18, 0x17, 0xf4, 0x5d, 0xd8, 0x3b, 0x67, 0x1c, 0x11, 0xea, 0x24, 0xfd, 0xb9, 0x64, 0x68,
	0xdb, 0xfc, 0x8e, 0x87, 0xfc, 0x08, 0xfa, 0x06, 0x4a, 0x96, 0x90, 0x0f, 0xa0, 0xb3, 0x10, 0x84,
	0x16, 0xac, 0xa7, 0x04, 0x93, 0x2b, 0xd4, 0x1c, 0xfd, 0x5b, 0x03, 0xda, 0x5f, 0x2c, 0xfd, 0xdb,
	0x37, 0x67, 0x57, 0x23, 0xf0, 0x2c, 0x33, 0xf0, 0xc4, 0x09, 0x49, 0x8a, 0x31, 0x6a, 0x79, 0xcd,
	0x24, 0x25, 0x47, 0x60, 0x0b, 0xf5, 0x5e, 0x85, 0x01, 0x46, 0xa8, 0xe5, 0x75, 0x04, 0x79, 0x11,
	0x90, 0x77, 0xa0, 0x8b, 0xdc, 0x89, 0x99, 0x2e, 0xce, 0xd8, 0x48, 0x5f, 0x04, 0xc2, 0x9d, 0xa5,
	0xa3, 0x3a, 0xe3, 0xd6, 0xa4, 0xa5, 0x7d, 0x53, 0x7a, 0x92, 0x10, 0xa3, 0x4e, 0xbf, 0x3e, 0xf4,
	0x65, 0x80, 0x6f, 0x59, 0x90, 0x0b, 0xd1, 0x2c, 0xbc, 0xc4, 0x10, 0x42, 0x4a, 0xab, 0x85, 0xc8,
	0x19, 0x68, 0x9b, 0x0c, 0xfc, 0xb3, 0x21, 0xbd, 0xf5, 0x8e, 0x13, 0x1e, 0xe6, 0xad, 0x15, 0x65,
	0x3a, 0x6f, 0x54, 0x99, 0x47, 0x60, 0x0b, 0xf6, 0xc5, 0x8c, 0x83, 0x49, 0xa4, 0x23, 0xc8, 0x8b,
	0x40, 0x87, 0x88, 0x94, 0x46, 0x86, 0x48, 0xb2, 0xf4, 0x6f, 0xab, 0x21, 0x82, 0xf3, 0x72, 0x86,
	0xfe, 0xbd, 0x09, 0xed, 0x97, 0x2c, 0x5d, 0x6d, 0x24, 0xa5, 0x9f, 0x02, 0x64, 0xdc, 0x4f, 0xf9,
	0xd5, 0x75, 0x1a, 0xaf, 0x50, 0x01, 0x7b, 0x27, 0xa3, 0x63, 0x59, 0x75, 0x8e, 0x75, 0x31, 0x39,
	0x7e, 0xa9, 0x6b, 0x87, 0xe7, 0xe0, 0xea, 0xcf, 0xd3, 0x78, 0x45, 0x3e, 0x82, 0x0e, 0x8b, 0x82,
	0x2b, 0x1e, 0xa3, 0x92, 0xee, 0xde, 0x66, 0xb1, 0x28, 0x78, 0x19, 0x93, 0x1f, 0x83, 0x13, 0x27,
	0x2c, 0x62, 0xc1, 0x95, 0xcf, 0x51, 0x8f, 0x77, 0xef, 0xea, 0xca, 0xc5, 0x2f, 0xb8, 0xb0, 0xeb,
	0x3c, 0x0e, 0x58, 0xe6, 0x5a, 0xe3, 0xd6, 0xc4, 0xf1, 0x24, 0x81, 0xcc, 0x33, 0xce, 0x97, 0x12,
	0xaf, 0xb3, 0x03, 0xf3, 0x72, 0xf5, 0x0b, 0x2e, 0xb6, 0xa6, 0xec, 0x55, 0xfc, 0xb5, 0xdc, 0x6a,
	0xbf, 0x7e, 0xab, 0x5a, 0xfd, 0x82, 0xd3, 0x3f, 0x36, 0xa0, 0x7f, 0x96, 0x32, 0x9f, 0x33, 0xa1,
	0xd1, 0xba, 0x4c, 0xff, 0x7f, 0x55, 0xaa, 0x0a, 0xaf, 0x2d, 0xbc, 0xd0, 0xff, 0x2a, 0xdf, 0xdf,
	0xc6, 0x2b, 0x16, 0xca, 0x20, 0xf7, 0x7d, 0xf1, 0x5f, 0xe1, 0xbf, 0xf5, 0x30, 0xfe, 0xdb, 0xbb,
	0x3a, 0xc5, 0x10, 0xac, 0x65, 0xb8, 0x0a, 0x39, 0x86, 0x90, 0xe5, 0x49, 0x42, 0x44, 0x56, 0x7c,
	0x7d, 0x9d, 0x31, 0xae, 0xa2, 0x48, 0x51, 0x22, 0x60, 0xe2, 0x34, 0x60, 0xe9, 0xd5, 0xec, 0x16,
	0xcd, 0xe6, 0x78, 0x36, 0xd2, 0xa7, 0xb7, 0x3a, 0x2e, 0xa4, 0xa4, 0x32, 0x2e, 0x38, 0x4b, 0x57,
	0xd5, 0xb8, 0xc0, 0x79, 0x39, 0x43, 0x3f, 0x84, 0x83, 0xb3, 0x78, 0x1d, 0xf1, 0xd2, 0xbe, 0x21,
	0x58, 0x3c, 0xe6, 0xfe, 0x52, 0x65, 0x08, 0x49, 0xd0, 0x9f, 0xc0, 0xe0, 0x12, 0x2d, 0x2e, 0x6a,
	0xf2, 0x7a, 0x59, 0x5b, 0xe2, 0x73, 0x37, 0x6d, 0x1a, 0x6e, 0x4a, 0x9f, 0xc1, 0xa1, 0xcc, 0x70,
	0xea, 0x84, 0x7b, 0x6d, 0x7e, 0x1f, 0xfa, 0x97, 0xe8, 0xb5, 0xdb, 0x0c, 0xfc, 0x3e, 0xf4, 0x3d,
	0xf4, 0xcd, 0x6d, 0x0b, 0xfe, 0xd2, 0x84, 0xd6, 0x29, 0xe3, 0x75, 0x5e, 0x3a, 0x47, 0x37, 0xc6,
	0x10, 0xd8, 0xc1, 0x4b, 0xd5, 0xea, 0x17, 0x1c, 0x53, 0x53, 0xc6, 0x52, 0x91, 0x9a, 0x5a, 0x2a,
	0x35, 0x65, 0x2c, 0xbd, 0x08, 0x6a, 0xef, 0x84, 0x47, 0x60, 0x8b, 0x24, 0x24, 0x16, 0x4b, 0x0b,
	0x77, 0x04, 0x59, 0x4e, 0x70, 0x1d, 0x33, 0xc1, 0xe5, 0x97, 0x37, 0xdb, 0xb8, 0x45, 0xbe, 0x0b,
	0x30, 0xff, 0xca, 0xcf, 0xd8, 0x55, 0xc6, 0xe3, 0x04, 0x53, 0x65, 0xd7, 0x73, 0x70, 0xe4, 0x92,
	0xc7, 0x49, 0xa1, 0x3c, 0xc7, 0x4c, 0x10, 0xc2, 0x92, 0x21, 0x5f, 0x32, 0x17, 0xd0, 0x53, 0x24,
	0x41, 0x3e, 0xc0, 0x7c, 0x19, 0x65, 0xee, 0x1e, 0xfa, 0xc5, 0xbe, 0xf2, 0x8b, 0x53, 0xac, 0x51,
	0x91, 0x27, 0x27, 0xe9, 0xb7, 0x0d, 0xb0, 0xd5, 0xd0, 0x86, 0xea, 0xde, 0x86, 0xce, 0x8c, 0x21,
	0xe3, 0x4d, 0x1c, 0xb3, 0x66, 0x8c, 0x4b, 0x81, 0x84, 0x5b, 0x19, 0x6a, 0x11, 0xa4, 0xac, 0x8b,
	0x78, 0xfd, 0x46, 0xbd, 0xb4, 0x3c, 0x49, 0x88, 0x12, 0x73, 0xc3, 0x6f, 0x51, 0x29, 0x2d, 0x4f,
	0xfc, 0x12, 0x17, 0xec, 0xc4, 0xbf, 0x5d, 0xb1, 0x88, 0xab, 0xcb, 0xb2, 0x26, 0x45, 0x38, 0xa4,
	0x6c, 0xe6, 0x73, 0xa6, 0x94, 0xa2, 0x28, 0x81, 0x3c, 0x8b, 0xa3, 0x75, 0x86, 0x1a, 0x69, 0x78,
	0x92, 0x20, 0x1f, 0x82, 0x75, 0xc9, 0x7d, 0xac, 0xc3, 0xc2, 0xaa, 0x87, 0x65, 0x09, 0x71, 0xca,
	0x93, 0x2b, 0xe8, 0x5f, 0x9b, 0xd0, 0x33, 0xc7, 0x77, 0x95, 0xd5, 0x05, 0x5b, 0x65, 0x53, 0x94,
	0xb5, 0xeb, 0x69, 0xb2, 0x92, 0x95, 0xdb, 0xf7, 0xc9, 0xca, 0x2e, 0xd8, 0x2a, 0xcf, 0xaa, 0xcb,
	0x89, 0x26, 0x2b, 0xf9, 0xba, 0x73, 0x8f, 0x7c, 0x6d, 0x2a, 0xd5, 0x2e, 0x2b, 0x75, 0x08, 0xd6,
	0xa9, 0xa9, 0x3c, 0x24, 0x0c, 0x55, 0x3b, 0x25, 0x55, 0x0f, 0xa0, 0xf5, 0xbb, 0x30, 0x42, 0x57,
	0x6a, 0x79, 0xe2, 0x97, 0xfe, 0xa7, 0x01, 0x3d, 0x59, 0x09, 0x4e, 0x19, 0x86, 0xb4, 0x11, 0x17,
	0x8d, 0xda, 0xb8, 0x30, 0x5b, 0x94, 0xb2, 0x47, 0xb7, 0xaa, 0x1e, 0x6d, 0x84, 0x4d, 0xbb, 0x14,
	0x36, 0x75, 0x3d, 0xd6, 0xd6, 0x50, 0xca, 0xe3, 0xc2, 0x36, 0xe3, 0x22, 0x8f, 0x80, 0xee, 0x5d,
	0x11, 0xf0, 0x1d, 0x70, 0xce, 0x19, 0x57, 0xa2, 0x55, 0xb3, 0xca, 0xbf, 0x9b, 0x00, 0x22, 0x6b,
	0xbe, 0x4e, 0x72, 0x43, 0x8c, 0xe6, 0xa6, 0x18, 0x81, 0xbe, 0xc0, 0xc9, 0xc2, 0xf3, 0x1c, 0x7a,
	0x3a, 0x25, 0x61, 0xe9, 0x79, 0xbd, 0xf3, 0xec, 0xa9, 0xf5, 0x58, 0x7c, 0x8c, 0x8c, 0xc6, 0x63,
	0xd4, 0xcf, 0x6e, 0x19, 0xed, 0x65, 0x6c, 0x86, 0x6e, 0xa7, 0x14, 0xba, 0xca, 0xea, 0xb2, 0xd4,
	0x88, 0x5f, 0xd3, 0xf3, 0xbb, 0xb2, 0x00, 0x69, 0xcf, 0x37, 0xdc, 0xd7, 0x91, 0x33, 0xda, 0x7d,
	0xf3, 0x1a, 0xb7, 0x5f, 0x5f, 0xe3, 0x1e, 0x99, 0x35, 0x8e, 0x3e, 0x95, 0x25, 0x1b, 0x55, 0x9b,
	0x25, 0xe4, 0x3d, 0x68, 0xcf, 0x58, 0xde, 0xfd, 0x41, 0x61, 0x2c, 0x0f, 0xc7, 0xe9, 0x04, 0x06,
	0x79, 0x11, 0xd3, 0x7b, 0xea, 0x6b, 0xd8, 0x18, 0xf6, 0xa5, 0x45, 0x65, 0x0a, 0xa8, 0x31, 0xeb,
	0x27, 0xf0, 0xa8, 0xb4, 0x22, 0x4b, 0x44, 0x32, 0xc9, 0x30, 0x99, 0xc8, 0xf3, 0xeb, 0x93, 0x09,
	0xae, 0x10, 0xb5, 0x48, 0xee, 0x46, 0x37, 0xaa, 0x81, 0x7f, 0x0e, 0xa4, 0x58, 0xb0, 0x8d, 0x09,
	0xe5, 0x33, 0x51, 0x91, 0x73, 0x84, 0xcf, 0x44, 0x17, 0x01, 0xfd, 0xa5, 0xa8, 0xc1, 0x42, 0xd7,
	0xdb, 0x8f, 0xd8, 0xba, 0x59, 0x5b, 0xb2, 0x55, 0xc4, 0xef, 0x53, 0x38, 0xa8, 0xc0, 0x65, 0x09,
	0x9a, 0x77, 0x3d, 0x9f, 0xb3, 0x2c, 0x43, 0x50, 0x91, 0xd8, 0x24, 0x49, 0x9f, 0xc1, 0x40, 0x56,
	0xda, 0x07, 0x9c, 0x2e, 0xce, 0xaa, 0x6c, 0xbe, 0xeb, 0xac, 0x93, 0x7f, 0x0c, 0xa0, 0x77, 0x26,
	0xf4, 0x7c, 0xc9, 0xd2, 0x57, 0xe1, 0x9c, 0x91, 0xcf, 0x30, 0x18, 0xd5, 0x83, 0x8d, 0xb6, 0x81,
	0xf9, 0x52, 0x32, 0xea, 0xeb, 0xd6, 0x18, 0x47, 0xe8, 0xa3, 0x3f, 0xfc, 0xeb, 0xdb, 0x3f, 0x35,
	0x1d, 0x62, 0x4f, 0xe7, 0x72, 0xd3, 0x05, 0xf4, 0xcc, 0x97, 0x14, 0xf2, 0x58, 0x3f, 0x23, 0x94,
	0x9f, 0x57, 0xaa, 0x38, 0x04, 0x71, 0x7a, 0x27, 0x1a, 0xe7, 0xe3, 0xc6, 0x0f, 0xc8, 0xcf, 0xc0,
	0x56, 0xef, 0x20, 0xe4, 0xa0, 0x60, 0x45, 0x3d, 0x7c, 0x8c, 0xcc, 0xf7, 0x09, 0x7a, 0x88, 0xdb,
	0xfb, 0x64, 0x6f, 0x8a, 0xbd, 0xd8, 0xf4, 0x9b, 0x30, 0xf8, 0x3d, 0x39, 0x83, 0xae, 0x7e, 0xe0,
	0x20, 0x44, 0xad, 0x36, 0x9e, 0x4e, 0x46, 0x87, 0x1b, 0x63, 0x59, 0x42, 0xf7, 0x11, 0xa9, 0x4b,
	0x3a, 0x12, 0x49, 0x31, 0x81, 0xaf, 0x1e, 0x06, 0x13, 0xea, 0x45, 0x62, 0x64, 0x3e, 0x14, 0x18,
	0x4c, 0xe0, 0x8b, 0x41, 0x89, 0x09, 0x04, 0x30, 0x99, 0xd0, 0x08, 0x87, 0x1b, 0x63, 0x25, 0x26,
	0x10, 0x89, 0x9c, 0x42, 0x57, 0x3f, 0x1e, 0xe4, 0x20, 0xc6, 0x6b, 0xc2, 0xa8, 0xd4, 0xd6, 0xd3,
	0x21, 0xee, 0xde, 0x27, 0xbd, 0xa9, 0xec, 0xef, 0x25, 0x23, 0xe7, 0xe0, 0xe4, 0x6f, 0x03, 0xc4,
	0x3c, 0x35, 0x47, 0x19, 0x6e, 0x0e, 0x66, 0x89, 0x61, 0x61, 0x89, 0xa6, 0x34, 0x82, 0xef, 0x05,
	0x86, 0x46, 0x54, 0xd7, 0x3b, 0x32, 0xfb, 0x42, 0x43, 0x23, 0xd8, 0x20, 0x96, 0x34, 0x82, 0x00,
	0xa6, 0x46, 0x34, 0xc2, 0xe1, 0xc6, 0x58, 0x49, 0x23, 0x88, 0x44, 0x4e, 0x01, 0x8a, 0x7e, 0x9e,
	0x0c, 0x4b, 0x4e, 0x56, 0xcb, 0xca, 0x01, 0x02, 0xec, 0x9d, 0x28, 0x00, 0xe1, 0x5f, 0xa7, 0x00,
	0x45, 0x87, 0x95, 0x63, 0x94, 0x9a, 0xae, 0x91, 0x79, 0x9d, 0xd7, 0x18, 0xb4, 0x33, 0xc5, 0x7b,
	0x7d, 0xe1, 0xa3, 0x08, 0x60, 0x28, 0xa3, 0x76, 0x77, 0xa1, 0x0c, 0xdc, 0x5d, 0x52, 0x06, 0x02,
	0x98, 0xca, 0xd0, 0x08, 0x87, 0x1b, 0x63, 0x25, 0x65, 0x20, 0x12, 0xf9, 0x14, 0xfa, 0xa5, 0xfe,
	0xa2, 0x16, 0xc9, 0xcd, 0x03, 0xae, 0xd2, 0x89, 0xd0, 0xb7, 0xc8, 0x25, 0x5e, 0xff, 0x8b, 0xc6,
	0x81, 0x1c, 0xa9, 0xc5, 0xd5, 0x5e, 0xa4, 0x2c, 0xd1, 0x13, 0xe4, 0xe3, 0x31, 0x3d, 0x30, 0x24,
	0x9a, 0x62, 0xed, 0x17, 0xaa, 0xf9, 0x2d, 0x0c, 0xaa, 0x0d, 0x09, 0x19, 0x95, 0x0c, 0x55, 0xea,
	0x54, 0x6a, 0xa1, 0x4f, 0xea, 0xa1, 0x7f, 0x05, 0x50, 0xb4, 0x2b, 0xb9, 0xe5, 0x4a, 0x1d, 0x4c,
	0x19, 0xee, 0x3d, 0x84, 0x73, 0xe9, 0xa1, 0x09, 0xa7, 0x0a, 0xaa, 0x02, 0x2c, 0xda, 0x9b, 0x1c,
	0xb0, 0xd4, 0xf1, 0xec, 0x00, 0xa8, 0xea, 0xb0, 0xf4, 0x0b, 0x27, 0xbf, 0xb3, 0xe5, 0xd1, 0x66,
	0xde, 0xe2, 0x46, 0x46, 0x85, 0xa5, 0x03, 0x44, 0x03, 0x6a, 0x4d, 0x45, 0xa9, 0x15, 0xfb, 0x3f,
	0x86, 0x8e, 0x2c, 0x61, 0x64, 0x50, 0xb8, 0x55, 0xcd, 0x4e, 0x95, 0x37, 0x09, 0xe0, 0x4e, 0xe9,
	0x53, 0x9f, 0x82, 0xad, 0x8a, 0x74, 0xee, 0x93, 0xc5, 0x1d, 0x6a, 0x44, 0xaa, 0x43, 0x59, 0x42,
	0xfb, 0x88, 0x62, 0x13, 0x79, 0x3e, 0xf9, 0x04, 0x7a, 0x66, 0xa9, 0xaf, 0x43, 0x39, 0xaa, 0x7a,
	0x93, 0x86, 0x7a, 0x8b, 0xfc, 0x1a, 0x5f, 0x3a, 0x75, 0x71, 0x27, 0x6f, 0x97, 0xf8, 0xd7, 0xd5,
	0x78, 0xf4, 0xb8, 0x6e, 0x38, 0x4b, 0xa8, 0x8b, 0xac, 0x10, 0x32, 0x28, 0x04, 0x9a, 0x62, 0xd9,
	0x27, 0xbf, 0xc0, 0x17, 0x08, 0xdd, 0x2c, 0x0d, 0x4b, 0xfb, 0x55, 0xa1, 0x1c, 0x55, 0xee, 0x98,
	0xb5, 0x68, 0x78, 0xed, 0x24, 0x5f, 0xeb, 0x2b, 0x48, 0xd1, 0x93, 0xbc, 0xb3, 0x01, 0x99, 0x73,
	0x5b, 0x77, 0x1d, 0xa1, 0x13, 0x04, 0xa7, 0x64, 0x5c, 0x05, 0x9f, 0x7e, 0xa3, 0xaa, 0xb3, 0x66,
	0xfd, 0x46, 0xb7, 0xd7, 0x9a, 0xfb, 0xa3, 0x92, 0xcb, 0x1a, 0x02, 0xb8, 0xf5, 0x13, 0x59, 0x42,
	0x9f, 0xe2, 0x69, 0xdf, 0xa7, 0xf4, 0xae, 0xd3, 0x0a, 0x8f, 0xbe, 0xd1, 0x0d, 0x7b, 0xf5, 0xc8,
	0xea, 0xe5, 0x22, 0x3f, 0x72, 0xe3, 0xe2, 0xb0, 0xd3, 0x91, 0x85, 0xcf, 0xcf, 0x3a, 0x78, 0xf9,
	0xfd, 0xe1, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x33, 0xdd, 0x40, 0x7b, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CqsscServiceClient is the client API for CqsscService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CqsscServiceClient interface {
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*Config, error)
	UpdateConfig(ctx context.Context, in *UpdateConfigReq, opts ...grpc.CallOption) (*Config, error)
	//
	GetUnit(ctx context.Context, in *GetUnitReq, opts ...grpc.CallOption) (*Unit, error)
	FindUnit(ctx context.Context, in *FindUnitReq, opts ...grpc.CallOption) (*FindUnitResp, error)
	//
	GetCatg(ctx context.Context, in *GetCatgReq, opts ...grpc.CallOption) (*Catg, error)
	FindCatg(ctx context.Context, in *FindCatgReq, opts ...grpc.CallOption) (*FindCatgResp, error)
	//
	GetGroup(ctx context.Context, in *GetGroupReq, opts ...grpc.CallOption) (*Group, error)
	FindGroup(ctx context.Context, in *FindGroupReq, opts ...grpc.CallOption) (*FindGroupResp, error)
	//
	GetPlay(ctx context.Context, in *GetPlayReq, opts ...grpc.CallOption) (*Play, error)
	FindPlay(ctx context.Context, in *FindPlayReq, opts ...grpc.CallOption) (*FindPlayResp, error)
	UpdatePlay(ctx context.Context, in *UpdatePlayReq, opts ...grpc.CallOption) (*Play, error)
	//
	CreateTerm(ctx context.Context, in *CreateTermReq, opts ...grpc.CallOption) (*Term, error)
	GetTerm(ctx context.Context, in *GetTermReq, opts ...grpc.CallOption) (*Term, error)
	FindTerm(ctx context.Context, in *FindTermReq, opts ...grpc.CallOption) (*FindTermResp, error)
	CountFindTerm(ctx context.Context, in *FindTermReq, opts ...grpc.CallOption) (*CountFindTermResp, error)
	SetTermResult(ctx context.Context, in *SeTermtResultReq, opts ...grpc.CallOption) (*Term, error)
	UpdateTermResult(ctx context.Context, in *UpdateTermResultReq, opts ...grpc.CallOption) (*Term, error)
	SettleTerm(ctx context.Context, in *SettleTermReq, opts ...grpc.CallOption) (*Term, error)
	RevokeTerm(ctx context.Context, in *RevokeTermReq, opts ...grpc.CallOption) (*Term, error)
	//
	CreateBet(ctx context.Context, in *CreateBetReq, opts ...grpc.CallOption) (*Bet, error)
	GetBet(ctx context.Context, in *GetBetReq, opts ...grpc.CallOption) (*Bet, error)
	FindBet(ctx context.Context, in *FindBetReq, opts ...grpc.CallOption) (*FindBetResp, error)
	CountFindBet(ctx context.Context, in *FindBetReq, opts ...grpc.CallOption) (*CountFindBetResp, error)
	GetBetStats(ctx context.Context, in *GetBetStatsReq, opts ...grpc.CallOption) (*GetBetStatsResp, error)
	GetBetPlan(ctx context.Context, in *GetBetPlanReq, opts ...grpc.CallOption) (*BetPlan, error)
	GetBetPlanStats(ctx context.Context, in *GetBetPlanStatsReq, opts ...grpc.CallOption) (*BetPlanStats, error)
	SettleBetPlan(ctx context.Context, in *SettleBetPlanReq, opts ...grpc.CallOption) (*SettleBetPlanResp, error)
	RevokeBetPlan(ctx context.Context, in *RevokeBetPlanReq, opts ...grpc.CallOption) (*RevokeBetPlanResp, error)
}

type cqsscServiceClient struct {
	cc *grpc.ClientConn
}

func NewCqsscServiceClient(cc *grpc.ClientConn) CqsscServiceClient {
	return &cqsscServiceClient{cc}
}

func (c *cqsscServiceClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) UpdateConfig(ctx context.Context, in *UpdateConfigReq, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/UpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetUnit(ctx context.Context, in *GetUnitReq, opts ...grpc.CallOption) (*Unit, error) {
	out := new(Unit)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetUnit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindUnit(ctx context.Context, in *FindUnitReq, opts ...grpc.CallOption) (*FindUnitResp, error) {
	out := new(FindUnitResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindUnit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetCatg(ctx context.Context, in *GetCatgReq, opts ...grpc.CallOption) (*Catg, error) {
	out := new(Catg)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetCatg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindCatg(ctx context.Context, in *FindCatgReq, opts ...grpc.CallOption) (*FindCatgResp, error) {
	out := new(FindCatgResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindCatg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetGroup(ctx context.Context, in *GetGroupReq, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindGroup(ctx context.Context, in *FindGroupReq, opts ...grpc.CallOption) (*FindGroupResp, error) {
	out := new(FindGroupResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetPlay(ctx context.Context, in *GetPlayReq, opts ...grpc.CallOption) (*Play, error) {
	out := new(Play)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetPlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindPlay(ctx context.Context, in *FindPlayReq, opts ...grpc.CallOption) (*FindPlayResp, error) {
	out := new(FindPlayResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindPlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) UpdatePlay(ctx context.Context, in *UpdatePlayReq, opts ...grpc.CallOption) (*Play, error) {
	out := new(Play)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/UpdatePlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) CreateTerm(ctx context.Context, in *CreateTermReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/CreateTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetTerm(ctx context.Context, in *GetTermReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindTerm(ctx context.Context, in *FindTermReq, opts ...grpc.CallOption) (*FindTermResp, error) {
	out := new(FindTermResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) CountFindTerm(ctx context.Context, in *FindTermReq, opts ...grpc.CallOption) (*CountFindTermResp, error) {
	out := new(CountFindTermResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/CountFindTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) SetTermResult(ctx context.Context, in *SeTermtResultReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/SetTermResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) UpdateTermResult(ctx context.Context, in *UpdateTermResultReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/UpdateTermResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) SettleTerm(ctx context.Context, in *SettleTermReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/SettleTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) RevokeTerm(ctx context.Context, in *RevokeTermReq, opts ...grpc.CallOption) (*Term, error) {
	out := new(Term)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/RevokeTerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) CreateBet(ctx context.Context, in *CreateBetReq, opts ...grpc.CallOption) (*Bet, error) {
	out := new(Bet)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/CreateBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetBet(ctx context.Context, in *GetBetReq, opts ...grpc.CallOption) (*Bet, error) {
	out := new(Bet)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) FindBet(ctx context.Context, in *FindBetReq, opts ...grpc.CallOption) (*FindBetResp, error) {
	out := new(FindBetResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/FindBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) CountFindBet(ctx context.Context, in *FindBetReq, opts ...grpc.CallOption) (*CountFindBetResp, error) {
	out := new(CountFindBetResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/CountFindBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetBetStats(ctx context.Context, in *GetBetStatsReq, opts ...grpc.CallOption) (*GetBetStatsResp, error) {
	out := new(GetBetStatsResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetBetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetBetPlan(ctx context.Context, in *GetBetPlanReq, opts ...grpc.CallOption) (*BetPlan, error) {
	out := new(BetPlan)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetBetPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) GetBetPlanStats(ctx context.Context, in *GetBetPlanStatsReq, opts ...grpc.CallOption) (*BetPlanStats, error) {
	out := new(BetPlanStats)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/GetBetPlanStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) SettleBetPlan(ctx context.Context, in *SettleBetPlanReq, opts ...grpc.CallOption) (*SettleBetPlanResp, error) {
	out := new(SettleBetPlanResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/SettleBetPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cqsscServiceClient) RevokeBetPlan(ctx context.Context, in *RevokeBetPlanReq, opts ...grpc.CallOption) (*RevokeBetPlanResp, error) {
	out := new(RevokeBetPlanResp)
	err := c.cc.Invoke(ctx, "/cqssc.CqsscService/RevokeBetPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CqsscServiceServer is the server API for CqsscService service.
type CqsscServiceServer interface {
	GetConfig(context.Context, *GetConfigReq) (*Config, error)
	UpdateConfig(context.Context, *UpdateConfigReq) (*Config, error)
	//
	GetUnit(context.Context, *GetUnitReq) (*Unit, error)
	FindUnit(context.Context, *FindUnitReq) (*FindUnitResp, error)
	//
	GetCatg(context.Context, *GetCatgReq) (*Catg, error)
	FindCatg(context.Context, *FindCatgReq) (*FindCatgResp, error)
	//
	GetGroup(context.Context, *GetGroupReq) (*Group, error)
	FindGroup(context.Context, *FindGroupReq) (*FindGroupResp, error)
	//
	GetPlay(context.Context, *GetPlayReq) (*Play, error)
	FindPlay(context.Context, *FindPlayReq) (*FindPlayResp, error)
	UpdatePlay(context.Context, *UpdatePlayReq) (*Play, error)
	//
	CreateTerm(context.Context, *CreateTermReq) (*Term, error)
	GetTerm(context.Context, *GetTermReq) (*Term, error)
	FindTerm(context.Context, *FindTermReq) (*FindTermResp, error)
	CountFindTerm(context.Context, *FindTermReq) (*CountFindTermResp, error)
	SetTermResult(context.Context, *SeTermtResultReq) (*Term, error)
	UpdateTermResult(context.Context, *UpdateTermResultReq) (*Term, error)
	SettleTerm(context.Context, *SettleTermReq) (*Term, error)
	RevokeTerm(context.Context, *RevokeTermReq) (*Term, error)
	//
	CreateBet(context.Context, *CreateBetReq) (*Bet, error)
	GetBet(context.Context, *GetBetReq) (*Bet, error)
	FindBet(context.Context, *FindBetReq) (*FindBetResp, error)
	CountFindBet(context.Context, *FindBetReq) (*CountFindBetResp, error)
	GetBetStats(context.Context, *GetBetStatsReq) (*GetBetStatsResp, error)
	GetBetPlan(context.Context, *GetBetPlanReq) (*BetPlan, error)
	GetBetPlanStats(context.Context, *GetBetPlanStatsReq) (*BetPlanStats, error)
	SettleBetPlan(context.Context, *SettleBetPlanReq) (*SettleBetPlanResp, error)
	RevokeBetPlan(context.Context, *RevokeBetPlanReq) (*RevokeBetPlanResp, error)
}

// UnimplementedCqsscServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCqsscServiceServer struct {
}

func (*UnimplementedCqsscServiceServer) GetConfig(ctx context.Context, req *GetConfigReq) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedCqsscServiceServer) UpdateConfig(ctx context.Context, req *UpdateConfigReq) (*Config, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfig not implemented")
}
func (*UnimplementedCqsscServiceServer) GetUnit(ctx context.Context, req *GetUnitReq) (*Unit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnit not implemented")
}
func (*UnimplementedCqsscServiceServer) FindUnit(ctx context.Context, req *FindUnitReq) (*FindUnitResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUnit not implemented")
}
func (*UnimplementedCqsscServiceServer) GetCatg(ctx context.Context, req *GetCatgReq) (*Catg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCatg not implemented")
}
func (*UnimplementedCqsscServiceServer) FindCatg(ctx context.Context, req *FindCatgReq) (*FindCatgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindCatg not implemented")
}
func (*UnimplementedCqsscServiceServer) GetGroup(ctx context.Context, req *GetGroupReq) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroup not implemented")
}
func (*UnimplementedCqsscServiceServer) FindGroup(ctx context.Context, req *FindGroupReq) (*FindGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindGroup not implemented")
}
func (*UnimplementedCqsscServiceServer) GetPlay(ctx context.Context, req *GetPlayReq) (*Play, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlay not implemented")
}
func (*UnimplementedCqsscServiceServer) FindPlay(ctx context.Context, req *FindPlayReq) (*FindPlayResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPlay not implemented")
}
func (*UnimplementedCqsscServiceServer) UpdatePlay(ctx context.Context, req *UpdatePlayReq) (*Play, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlay not implemented")
}
func (*UnimplementedCqsscServiceServer) CreateTerm(ctx context.Context, req *CreateTermReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) GetTerm(ctx context.Context, req *GetTermReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) FindTerm(ctx context.Context, req *FindTermReq) (*FindTermResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) CountFindTerm(ctx context.Context, req *FindTermReq) (*CountFindTermResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountFindTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) SetTermResult(ctx context.Context, req *SeTermtResultReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTermResult not implemented")
}
func (*UnimplementedCqsscServiceServer) UpdateTermResult(ctx context.Context, req *UpdateTermResultReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTermResult not implemented")
}
func (*UnimplementedCqsscServiceServer) SettleTerm(ctx context.Context, req *SettleTermReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) RevokeTerm(ctx context.Context, req *RevokeTermReq) (*Term, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeTerm not implemented")
}
func (*UnimplementedCqsscServiceServer) CreateBet(ctx context.Context, req *CreateBetReq) (*Bet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBet not implemented")
}
func (*UnimplementedCqsscServiceServer) GetBet(ctx context.Context, req *GetBetReq) (*Bet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBet not implemented")
}
func (*UnimplementedCqsscServiceServer) FindBet(ctx context.Context, req *FindBetReq) (*FindBetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindBet not implemented")
}
func (*UnimplementedCqsscServiceServer) CountFindBet(ctx context.Context, req *FindBetReq) (*CountFindBetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountFindBet not implemented")
}
func (*UnimplementedCqsscServiceServer) GetBetStats(ctx context.Context, req *GetBetStatsReq) (*GetBetStatsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBetStats not implemented")
}
func (*UnimplementedCqsscServiceServer) GetBetPlan(ctx context.Context, req *GetBetPlanReq) (*BetPlan, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBetPlan not implemented")
}
func (*UnimplementedCqsscServiceServer) GetBetPlanStats(ctx context.Context, req *GetBetPlanStatsReq) (*BetPlanStats, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBetPlanStats not implemented")
}
func (*UnimplementedCqsscServiceServer) SettleBetPlan(ctx context.Context, req *SettleBetPlanReq) (*SettleBetPlanResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleBetPlan not implemented")
}
func (*UnimplementedCqsscServiceServer) RevokeBetPlan(ctx context.Context, req *RevokeBetPlanReq) (*RevokeBetPlanResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeBetPlan not implemented")
}

func RegisterCqsscServiceServer(s *grpc.Server, srv CqsscServiceServer) {
	s.RegisterService(&_CqsscService_serviceDesc, srv)
}

func _CqsscService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_UpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).UpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/UpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).UpdateConfig(ctx, req.(*UpdateConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUnitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetUnit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetUnit(ctx, req.(*GetUnitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindUnit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUnitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindUnit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindUnit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindUnit(ctx, req.(*FindUnitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetCatg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCatgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetCatg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetCatg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetCatg(ctx, req.(*GetCatgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindCatg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindCatgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindCatg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindCatg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindCatg(ctx, req.(*FindCatgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetGroup(ctx, req.(*GetGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindGroup(ctx, req.(*FindGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetPlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetPlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetPlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetPlay(ctx, req.(*GetPlayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindPlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPlayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindPlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindPlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindPlay(ctx, req.(*FindPlayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_UpdatePlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).UpdatePlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/UpdatePlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).UpdatePlay(ctx, req.(*UpdatePlayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_CreateTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).CreateTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/CreateTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).CreateTerm(ctx, req.(*CreateTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetTerm(ctx, req.(*GetTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindTerm(ctx, req.(*FindTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_CountFindTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).CountFindTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/CountFindTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).CountFindTerm(ctx, req.(*FindTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_SetTermResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SeTermtResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).SetTermResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/SetTermResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).SetTermResult(ctx, req.(*SeTermtResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_UpdateTermResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTermResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).UpdateTermResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/UpdateTermResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).UpdateTermResult(ctx, req.(*UpdateTermResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_SettleTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettleTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).SettleTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/SettleTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).SettleTerm(ctx, req.(*SettleTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_RevokeTerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeTermReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).RevokeTerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/RevokeTerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).RevokeTerm(ctx, req.(*RevokeTermReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_CreateBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).CreateBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/CreateBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).CreateBet(ctx, req.(*CreateBetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetBet(ctx, req.(*GetBetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_FindBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindBetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).FindBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/FindBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).FindBet(ctx, req.(*FindBetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_CountFindBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindBetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).CountFindBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/CountFindBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).CountFindBet(ctx, req.(*FindBetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetBetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBetStatsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetBetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetBetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetBetStats(ctx, req.(*GetBetStatsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetBetPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBetPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetBetPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetBetPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetBetPlan(ctx, req.(*GetBetPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_GetBetPlanStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBetPlanStatsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).GetBetPlanStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/GetBetPlanStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).GetBetPlanStats(ctx, req.(*GetBetPlanStatsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_SettleBetPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettleBetPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).SettleBetPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/SettleBetPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).SettleBetPlan(ctx, req.(*SettleBetPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CqsscService_RevokeBetPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeBetPlanReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CqsscServiceServer).RevokeBetPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.CqsscService/RevokeBetPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CqsscServiceServer).RevokeBetPlan(ctx, req.(*RevokeBetPlanReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CqsscService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cqssc.CqsscService",
	HandlerType: (*CqsscServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _CqsscService_GetConfig_Handler,
		},
		{
			MethodName: "UpdateConfig",
			Handler:    _CqsscService_UpdateConfig_Handler,
		},
		{
			MethodName: "GetUnit",
			Handler:    _CqsscService_GetUnit_Handler,
		},
		{
			MethodName: "FindUnit",
			Handler:    _CqsscService_FindUnit_Handler,
		},
		{
			MethodName: "GetCatg",
			Handler:    _CqsscService_GetCatg_Handler,
		},
		{
			MethodName: "FindCatg",
			Handler:    _CqsscService_FindCatg_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _CqsscService_GetGroup_Handler,
		},
		{
			MethodName: "FindGroup",
			Handler:    _CqsscService_FindGroup_Handler,
		},
		{
			MethodName: "GetPlay",
			Handler:    _CqsscService_GetPlay_Handler,
		},
		{
			MethodName: "FindPlay",
			Handler:    _CqsscService_FindPlay_Handler,
		},
		{
			MethodName: "UpdatePlay",
			Handler:    _CqsscService_UpdatePlay_Handler,
		},
		{
			MethodName: "CreateTerm",
			Handler:    _CqsscService_CreateTerm_Handler,
		},
		{
			MethodName: "GetTerm",
			Handler:    _CqsscService_GetTerm_Handler,
		},
		{
			MethodName: "FindTerm",
			Handler:    _CqsscService_FindTerm_Handler,
		},
		{
			MethodName: "CountFindTerm",
			Handler:    _CqsscService_CountFindTerm_Handler,
		},
		{
			MethodName: "SetTermResult",
			Handler:    _CqsscService_SetTermResult_Handler,
		},
		{
			MethodName: "UpdateTermResult",
			Handler:    _CqsscService_UpdateTermResult_Handler,
		},
		{
			MethodName: "SettleTerm",
			Handler:    _CqsscService_SettleTerm_Handler,
		},
		{
			MethodName: "RevokeTerm",
			Handler:    _CqsscService_RevokeTerm_Handler,
		},
		{
			MethodName: "CreateBet",
			Handler:    _CqsscService_CreateBet_Handler,
		},
		{
			MethodName: "GetBet",
			Handler:    _CqsscService_GetBet_Handler,
		},
		{
			MethodName: "FindBet",
			Handler:    _CqsscService_FindBet_Handler,
		},
		{
			MethodName: "CountFindBet",
			Handler:    _CqsscService_CountFindBet_Handler,
		},
		{
			MethodName: "GetBetStats",
			Handler:    _CqsscService_GetBetStats_Handler,
		},
		{
			MethodName: "GetBetPlan",
			Handler:    _CqsscService_GetBetPlan_Handler,
		},
		{
			MethodName: "GetBetPlanStats",
			Handler:    _CqsscService_GetBetPlanStats_Handler,
		},
		{
			MethodName: "SettleBetPlan",
			Handler:    _CqsscService_SettleBetPlan_Handler,
		},
		{
			MethodName: "RevokeBetPlan",
			Handler:    _CqsscService_RevokeBetPlan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lottery/ssc/cqssc/proto/cqssc.proto",
}
