// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cqssc.proto

package cqssc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidateReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Code                 []string `protobuf:"bytes,2,rep,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateReq) Reset()         { *m = ValidateReq{} }
func (m *ValidateReq) String() string { return proto.CompactTextString(m) }
func (*ValidateReq) ProtoMessage()    {}
func (*ValidateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d1f4352792734d7, []int{0}
}

func (m *ValidateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateReq.Unmarshal(m, b)
}
func (m *ValidateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateReq.Marshal(b, m, deterministic)
}
func (m *ValidateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateReq.Merge(m, src)
}
func (m *ValidateReq) XXX_Size() int {
	return xxx_messageInfo_ValidateReq.Size(m)
}
func (m *ValidateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateReq.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateReq proto.InternalMessageInfo

func (m *ValidateReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ValidateReq) GetCode() []string {
	if m != nil {
		return m.Code
	}
	return nil
}

type ValidateResp struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateResp) Reset()         { *m = ValidateResp{} }
func (m *ValidateResp) String() string { return proto.CompactTextString(m) }
func (*ValidateResp) ProtoMessage()    {}
func (*ValidateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d1f4352792734d7, []int{1}
}

func (m *ValidateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateResp.Unmarshal(m, b)
}
func (m *ValidateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateResp.Marshal(b, m, deterministic)
}
func (m *ValidateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateResp.Merge(m, src)
}
func (m *ValidateResp) XXX_Size() int {
	return xxx_messageInfo_ValidateResp.Size(m)
}
func (m *ValidateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateResp.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateResp proto.InternalMessageInfo

func (m *ValidateResp) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type ComputeReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Code                 []string `protobuf:"bytes,2,rep,name=code,proto3" json:"code,omitempty"`
	Result               []string `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeReq) Reset()         { *m = ComputeReq{} }
func (m *ComputeReq) String() string { return proto.CompactTextString(m) }
func (*ComputeReq) ProtoMessage()    {}
func (*ComputeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d1f4352792734d7, []int{2}
}

func (m *ComputeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeReq.Unmarshal(m, b)
}
func (m *ComputeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeReq.Marshal(b, m, deterministic)
}
func (m *ComputeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeReq.Merge(m, src)
}
func (m *ComputeReq) XXX_Size() int {
	return xxx_messageInfo_ComputeReq.Size(m)
}
func (m *ComputeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeReq proto.InternalMessageInfo

func (m *ComputeReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ComputeReq) GetCode() []string {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *ComputeReq) GetResult() []string {
	if m != nil {
		return m.Result
	}
	return nil
}

type ComputeResp struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeResp) Reset()         { *m = ComputeResp{} }
func (m *ComputeResp) String() string { return proto.CompactTextString(m) }
func (*ComputeResp) ProtoMessage()    {}
func (*ComputeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d1f4352792734d7, []int{3}
}

func (m *ComputeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeResp.Unmarshal(m, b)
}
func (m *ComputeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeResp.Marshal(b, m, deterministic)
}
func (m *ComputeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeResp.Merge(m, src)
}
func (m *ComputeResp) XXX_Size() int {
	return xxx_messageInfo_ComputeResp.Size(m)
}
func (m *ComputeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeResp.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeResp proto.InternalMessageInfo

func (m *ComputeResp) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*ValidateReq)(nil), "cqssc.ValidateReq")
	proto.RegisterType((*ValidateResp)(nil), "cqssc.ValidateResp")
	proto.RegisterType((*ComputeReq)(nil), "cqssc.ComputeReq")
	proto.RegisterType((*ComputeResp)(nil), "cqssc.ComputeResp")
}

func init() { proto.RegisterFile("cqssc.proto", fileDescriptor_4d1f4352792734d7) }

var fileDescriptor_4d1f4352792734d7 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2e, 0x2c, 0x2e,
	0x4e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x8c, 0xb9, 0xb8, 0xc3,
	0x12, 0x73, 0x32, 0x53, 0x12, 0x4b, 0x52, 0x83, 0x52, 0x0b, 0x85, 0x04, 0xb8, 0x98, 0x4b, 0x12,
	0xd3, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x21, 0x2e, 0x96, 0xe4, 0xfc,
	0x94, 0x54, 0x09, 0x26, 0x05, 0x66, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x81, 0x8b, 0x07, 0xa1,
	0xa9, 0xb8, 0x00, 0xa4, 0x2b, 0xaf, 0x34, 0x17, 0xac, 0x8b, 0x35, 0x08, 0xc4, 0x54, 0xf2, 0xe2,
	0xe2, 0x72, 0xce, 0xcf, 0x2d, 0x28, 0x25, 0xc1, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2,
	0xd2, 0x9c, 0x12, 0x09, 0x66, 0xb0, 0x28, 0x94, 0xa7, 0x24, 0xcf, 0xc5, 0x0d, 0x37, 0x0b, 0x9b,
	0x65, 0x46, 0x25, 0x5c, 0xec, 0x6e, 0xf9, 0x45, 0xb9, 0xa5, 0x39, 0x89, 0x42, 0xa6, 0x5c, 0x1c,
	0x30, 0x97, 0x09, 0x09, 0xe9, 0x41, 0xfc, 0x8b, 0xe4, 0x3f, 0x29, 0x61, 0x0c, 0xb1, 0xe2, 0x02,
	0x25, 0x06, 0x21, 0x23, 0x2e, 0x76, 0xa8, 0x15, 0x42, 0x82, 0x50, 0x15, 0x08, 0xe7, 0x4b, 0x09,
	0xa1, 0x0b, 0x81, 0xf4, 0x24, 0xb1, 0x81, 0xc3, 0xd1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x78,
	0x20, 0x9a, 0x45, 0x56, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FormulaClient is the client API for Formula service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FormulaClient interface {
	Validate(ctx context.Context, in *ValidateReq, opts ...grpc.CallOption) (*ValidateResp, error)
	Compute(ctx context.Context, in *ComputeReq, opts ...grpc.CallOption) (*ComputeResp, error)
}

type formulaClient struct {
	cc *grpc.ClientConn
}

func NewFormulaClient(cc *grpc.ClientConn) FormulaClient {
	return &formulaClient{cc}
}

func (c *formulaClient) Validate(ctx context.Context, in *ValidateReq, opts ...grpc.CallOption) (*ValidateResp, error) {
	out := new(ValidateResp)
	err := c.cc.Invoke(ctx, "/cqssc.Formula/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formulaClient) Compute(ctx context.Context, in *ComputeReq, opts ...grpc.CallOption) (*ComputeResp, error) {
	out := new(ComputeResp)
	err := c.cc.Invoke(ctx, "/cqssc.Formula/Compute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FormulaServer is the server API for Formula service.
type FormulaServer interface {
	Validate(context.Context, *ValidateReq) (*ValidateResp, error)
	Compute(context.Context, *ComputeReq) (*ComputeResp, error)
}

// UnimplementedFormulaServer can be embedded to have forward compatible implementations.
type UnimplementedFormulaServer struct {
}

func (*UnimplementedFormulaServer) Validate(ctx context.Context, req *ValidateReq) (*ValidateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}
func (*UnimplementedFormulaServer) Compute(ctx context.Context, req *ComputeReq) (*ComputeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compute not implemented")
}

func RegisterFormulaServer(s *grpc.Server, srv FormulaServer) {
	s.RegisterService(&_Formula_serviceDesc, srv)
}

func _Formula_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormulaServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.Formula/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormulaServer).Validate(ctx, req.(*ValidateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Formula_Compute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormulaServer).Compute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqssc.Formula/Compute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormulaServer).Compute(ctx, req.(*ComputeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Formula_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cqssc.Formula",
	HandlerType: (*FormulaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _Formula_Validate_Handler,
		},
		{
			MethodName: "Compute",
			Handler:    _Formula_Compute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cqssc.proto",
}
